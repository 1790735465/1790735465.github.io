<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Centos安装Dokcer</title>
      <link href="/posts/1565438925/"/>
      <url>/posts/1565438925/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p> 要安装Docke , 您需要一个CentOS 7.x以上的维护版本。不支持或未测试存档版本。 </p><h1 id="卸载旧版本"><a href="#卸载旧版本" class="headerlink" title="卸载旧版本"></a>卸载旧版本</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@xingzhen /] yum remove docker \</span><br><span class="line">                  docker-client \</span><br><span class="line">                  docker-client-latest \</span><br><span class="line">                  docker-common \</span><br><span class="line">                  docker-latest \</span><br><span class="line">                  docker-latest-logrotate \</span><br><span class="line">                  docker-logrotate \</span><br><span class="line">                  docker-engine</span><br></pre></td></tr></table></figure><h1 id="安装需要的软件包"><a href="#安装需要的软件包" class="headerlink" title="安装需要的软件包"></a>安装需要的软件包</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@xingzhen /] yum install -y yum-utils</span><br></pre></td></tr></table></figure><h1 id="设置镜像仓库"><a href="#设置镜像仓库" class="headerlink" title="设置镜像仓库"></a>设置镜像仓库</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@xingzhen /] yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure><h1 id="更新yum软件包索引"><a href="#更新yum软件包索引" class="headerlink" title="更新yum软件包索引"></a>更新yum软件包索引</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@xingzhen /]yum makecache fast</span><br></pre></td></tr></table></figure><h1 id="安装-Docker-CE-社区版"><a href="#安装-Docker-CE-社区版" class="headerlink" title="安装 Docker CE(社区版)"></a>安装 Docker CE(社区版)</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@xingzhen &#x2F;]yum install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure><h1 id="启动停止重启Docker"><a href="#启动停止重启Docker" class="headerlink" title="启动停止重启Docker"></a>启动停止重启Docker</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@xingzhen /]systemctl start docker #启动docker</span><br><span class="line">[root@xingzhen /]systemctl stop docker  #停止docker</span><br><span class="line">[root@xingzhen /]systemctl restart docker #重启docker</span><br></pre></td></tr></table></figure><h1 id="hello-world-Docker"><a href="#hello-world-Docker" class="headerlink" title="hello-world Docker"></a>hello-world Docker</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">[root@xingzhen /]docker run hello-world</span><br><span class="line"></span><br><span class="line">Unable to find image 'hello-world:latest' locally</span><br><span class="line">latest: Pulling from library/hello-world</span><br><span class="line">0e03bdcc26d7: Pull complete </span><br><span class="line">Digest: sha256:49a1c8800c94df04e9658809b006fd8a686cab8028d33cfba2cc049724254202</span><br><span class="line">Status: Downloaded newer image for hello-world:latest</span><br><span class="line"></span><br><span class="line">Hello from Docker!#出现这个表示安装成功</span><br><span class="line">This message shows that your installation appears to be working correctly.</span><br><span class="line"></span><br><span class="line">To generate this message, Docker took the following steps:</span><br><span class="line"> 1. The Docker client contacted the Docker daemon.</span><br><span class="line"> 2. The Docker daemon pulled the "hello-world" image from the Docker Hub.</span><br><span class="line">    (amd64)</span><br><span class="line"> 3. The Docker daemon created a new container from that image which runs the</span><br><span class="line">    executable that produces the output you are currently reading.</span><br><span class="line"> 4. The Docker daemon streamed that output to the Docker client, which sent it</span><br><span class="line">    to your terminal.</span><br><span class="line"></span><br><span class="line">To try something more ambitious, you can run an Ubuntu container with:</span><br><span class="line"><span class="meta"> $</span><span class="bash"> docker run -it ubuntu bash</span></span><br><span class="line"></span><br><span class="line">Share images, automate workflows, and more with a free Docker ID:</span><br><span class="line"> https://hub.docker.com/</span><br><span class="line"></span><br><span class="line">For more examples and ideas, visit:</span><br><span class="line"> https://docs.docker.com/get-started/</span><br></pre></td></tr></table></figure><h1 id="配置阿里云镜像加速"><a href="#配置阿里云镜像加速" class="headerlink" title="配置阿里云镜像加速"></a>配置阿里云镜像加速</h1><p><strong>我们在下载东西的时候,可以发现下载镜像特别慢,所有我们要配置阿里云镜像加速</strong></p><p><img src="https://cdn.jsdelivr.net/gh/1790735465/butterfly_image/img/20200728093047.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/1790735465/butterfly_image/img/20200728093338.png" alt></p><h1 id="卸载Docker"><a href="#卸载Docker" class="headerlink" title="卸载Docker"></a>卸载Docker</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@xingzhen /]yum remove docker-ce docker-ce-cli containerd.io #卸载Docker，CLI和Containerd软件包：</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@xingzhen /]rm -rf /var/lib/docker #主机上的映像，容器，卷或自定义配置文件不会自动删除。要删除所有图像，容器和卷：</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux操作系统 </category>
          
          <category> centos7.4 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 操作系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql8.0密码加密规则修改</title>
      <link href="/posts/1723764238/"/>
      <url>/posts/1723764238/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>通过Docker安装mysql8.x版本以后,通过本地连接服务器的mysql,发现了问题</p><p><img src="https://cdn.jsdelivr.net/gh/1790735465/butterfly_image/img/20200725092658.png" alt></p><p>通过百度知道找到</p><p> <strong>出现这个原因是mysql8.0 之前的版本中加密规则是mysql_native_password,而在mysql8之后,加密规则是caching_sha2_password, 解决此问题方法有两种,一种是升级客户端驱动,一种是把mysql用户登录密码加密规则还原成mysql_native_password。</strong> </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 修改密码并指定加密规则为mysql_native_password</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">'root'</span>@<span class="string">'%'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">WITH</span> mysql_native_password <span class="keyword">BY</span> <span class="string">'root'</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 刷新权限</span></span><br><span class="line"><span class="keyword">flush</span> <span class="keyword">privileges</span>;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/1790735465/butterfly_image/img/20200725093422.png" alt></p>]]></content>
      
      
      
        <tags>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用git向github远程仓库推送文件</title>
      <link href="/posts/2102250240/"/>
      <url>/posts/2102250240/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="Git项目搭建"><a href="#Git项目搭建" class="headerlink" title="Git项目搭建"></a>Git项目搭建</h1><p> 创建本地仓库的方法有两种：一种是创建全新的仓库，另一种是克隆远程仓库。 </p><h2 id="本地仓库搭建"><a href="#本地仓库搭建" class="headerlink" title="本地仓库搭建"></a>本地仓库搭建</h2><p>1、创建全新的仓库，需要用GIT管理的项目的根目录执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 在当前目录新建一个Git代码库</span><br><span class="line">git init</span><br></pre></td></tr></table></figure><p> 2、执行后可以看到，仅仅在项目目录多出了一个.git目录，关于版本等的所有信息都在这个目录里面。 </p><h2 id="克隆远程仓库"><a href="#克隆远程仓库" class="headerlink" title="克隆远程仓库"></a>克隆远程仓库</h2><p> 1、另一种方式是克隆远程目录，由于是将远程服务器上的仓库完全镜像一份至本地！ </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">克隆一个项目和它的整个代码历史(版本信息)</span><br><span class="line">git clone [github地址]</span><br></pre></td></tr></table></figure><p> 2、去 gitee 或者 github 上克隆一个测试！ </p><h1 id="向GitHub仓库推送本地文件夹"><a href="#向GitHub仓库推送本地文件夹" class="headerlink" title="向GitHub仓库推送本地文件夹"></a>向GitHub仓库推送本地文件夹</h1><p>首页先在GitHub上新建一个仓库</p><p>其次在本地随便新建一个文件夹，在该文件夹内右键Git Bash Here</p><p>输入以下命令，下载到本地</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone github地址</span><br></pre></td></tr></table></figure><p>然后在下载下来的文件夹内，加入你想要添加的文件</p><p>添加完成后，输入以下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git add .    #添加所有文件到暂存区</span><br><span class="line">git commit -m &#39;仓库的信息&#39;    #提交暂存区中的内容到本地仓库 -m 提交信息</span><br><span class="line">git status    #查看所有文件状态</span><br><span class="line">git remote  add  origin  github地址      #远程仓库关联到origin名称上</span><br><span class="line">git push origin master    #将add内容推送到远程仓库</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>考试知识点汇总</title>
      <link href="/posts/3944434887/"/>
      <url>/posts/3944434887/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h2 id="数据库优化——-gt-MySQL"><a href="#数据库优化——-gt-MySQL" class="headerlink" title="数据库优化——-&gt;MySQL"></a>数据库优化——-&gt;MySQL</h2><h3 id="MySQL四个优化方向"><a href="#MySQL四个优化方向" class="headerlink" title="MySQL四个优化方向"></a>MySQL四个优化方向</h3><p><strong>设计角度：</strong> 存储引擎的选择，字段类型选择，范式。</p><p><strong>自身特性：</strong>索引，查询缓存，分区分表，存储过程，SQL语句优化配置</p><p><strong>架构体系：</strong>主从复制（读写分离）</p><p><strong>硬件升级：</strong>CPU、内存等。</p><h4 id="选择合适的存储引擎"><a href="#选择合适的存储引擎" class="headerlink" title="选择合适的存储引擎"></a>选择合适的存储引擎</h4><ol><li>MYISAM  查询快，增删慢 表锁</li><li>InnoDB 支持事务，并发   行锁</li></ol><h4 id="表结构优化"><a href="#表结构优化" class="headerlink" title="表结构优化"></a>表结构优化</h4><ol><li>恰当的字段类型</li><li>范式</li><li>水平划分</li><li>垂直划分</li></ol><h3 id="SQL优化"><a href="#SQL优化" class="headerlink" title="SQL优化"></a>SQL优化</h3><p>避免使用  select  *   like   or</p><h3 id="MySQL存储引擎"><a href="#MySQL存储引擎" class="headerlink" title="MySQL存储引擎"></a>MySQL存储引擎</h3><h4 id="InnoDB和MYISAM的区别"><a href="#InnoDB和MYISAM的区别" class="headerlink" title="InnoDB和MYISAM的区别"></a>InnoDB和MYISAM的区别</h4><ol><li>InnoDB 支持主外键、事务</li><li>InnoDB 是行锁，操作时候只锁一行数据，适合高并发；MYISAM是表锁</li><li>InnoDB 不仅缓存索引，还缓存真实数据；MYISAM只缓存索引</li><li>InnoDB 需要表空间大</li><li>InnoDB 关注事务，MYISAM关注性能（查）；</li></ol><h3 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h3><p>索引：排好序的快速查找数据结构</p><p>优点：提高数据检索的效率，降低数据排序的成本</p><p>缺点：会降低更新表的速度</p><h4 id="索引分类"><a href="#索引分类" class="headerlink" title="索引分类"></a>索引分类</h4><p>主键索引 (Primary Key) :  某一个属性组能唯一标识一条记录 </p><p>唯一索引：索引列的值必须唯一，允许有空值</p><p>单值索引：一个索引只包含单个列，一个表可以由多个单值索引</p><p>符合索引：即一个索引包含多个列</p><h3 id="Mysql命令增加、修改、删除表字段"><a href="#Mysql命令增加、修改、删除表字段" class="headerlink" title="Mysql命令增加、修改、删除表字段"></a>Mysql命令增加、修改、删除表字段</h3><h4 id="增加"><a href="#增加" class="headerlink" title="增加"></a>增加</h4><p>alter add命令格式：alter table 表名 add字段 类型 其他；如下所示：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> car_evidence <span class="keyword">add</span> <span class="string">`unit_name`</span> <span class="built_in">varchar</span>(<span class="number">64</span>) <span class="keyword">comment</span> <span class="string">'单位'</span></span><br></pre></td></tr></table></figure><h4 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h4><p>alter drop 命令格式：alter table 表名 drop column 字段；</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> car_evidence <span class="keyword">drop</span> <span class="keyword">column</span> <span class="string">`unit_name`</span>;</span><br></pre></td></tr></table></figure><h4 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h4><p>　alter modify 命令格式：alter table 表名 modify 字段 其他；如下所示：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> t_plan <span class="keyword">MODIFY</span> box_size <span class="built_in">VARCHAR</span>(<span class="number">32</span>) <span class="keyword">comment</span> <span class="string">'盒内的数量'</span>;</span><br></pre></td></tr></table></figure><h3 id="索引失效"><a href="#索引失效" class="headerlink" title="索引失效"></a>索引失效</h3><ol><li>最好全值匹配</li><li>最左前缀法则：如果索引了多列，查询从索引的最左前列开始，且不能跳过索引中的列</li><li>不在索引列上做任何操作（计算，函数，类型转换），会导致索引时校而转向全表扫描</li><li>存储引擎不能使用索引中范围条件右边的列，即范围之后全失效</li><li>尽量使用覆盖索引，只访问索引的查询（索引列和查询列一致），减少   select *</li><li>MySQL在使用不等于的时候无法使用索引会导致全表扫描</li><li>is null， is not null 也无法使用索引</li><li>like  以通配符开头  （’%aa’）索引会失效，变成全表扫描</li><li>字符串不加单引号，索引失效</li><li>少用  or ，用它连的接时候索引会失效</li></ol><h3 id="sql题目"><a href="#sql题目" class="headerlink" title="sql题目"></a>sql题目</h3><p><img src="https://cdn.jsdelivr.net/gh/1790735465/butterfly_image/img/20200701091058.png" alt></p><p>– 1.在studen表中插入一条记录:1008,王明,男,1997-7-1,1801</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student <span class="keyword">VALUES</span>(<span class="string">'3'</span>,<span class="string">'王明'</span>,<span class="string">'1'</span>,<span class="string">'1997-7-1'</span>,<span class="string">'1801'</span>)</span><br></pre></td></tr></table></figure><p>– 2.修改student表中姓名是王明的学生的班级为1802</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> student <span class="keyword">SET</span> <span class="keyword">class</span>=<span class="string">'1802'</span> <span class="keyword">WHERE</span> sname=<span class="string">'王明'</span></span><br></pre></td></tr></table></figure><p>– 3.删除student表中姓名是王明且班级是1802的记录</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> sname=<span class="string">'王明'</span> <span class="keyword">AND</span> <span class="keyword">class</span>=<span class="string">'1802'</span></span><br></pre></td></tr></table></figure><p>– 4.查询student表中的学号.姓名和班级字段</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">sid</span> 学号,sname 姓名,<span class="keyword">class</span> 班级字段 <span class="keyword">FROM</span> student</span><br></pre></td></tr></table></figure><p>– 5.查询student表中性别为女的学生信息  <strong>男生为1 女生为2</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> sex=<span class="number">2</span></span><br></pre></td></tr></table></figure><p>– 6.查询student表中学号分别为1001,1003，1006的学生信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> <span class="keyword">sid</span> <span class="keyword">IN</span>(<span class="number">1001</span>,<span class="number">1003</span>,<span class="number">1006</span>)</span><br></pre></td></tr></table></figure><p>– 7.在score表中查询课程号为1且成绩大于80分的学号</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">sid</span> 学号 <span class="keyword">FROM</span> score <span class="keyword">WHERE</span> coid=<span class="number">1</span> <span class="keyword">AND</span> grade&gt;<span class="number">80</span></span><br></pre></td></tr></table></figure><p>– 8.一条sql统计student表中每个班的人数,并找出人数大于50的班级</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *,<span class="keyword">COUNT</span>(<span class="keyword">class</span>) su <span class="keyword">FROM</span> student</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> <span class="keyword">class</span></span><br><span class="line"><span class="keyword">HAVING</span> su&gt;<span class="number">50</span></span><br></pre></td></tr></table></figure><p>– 9.查询每个学生平均成绩大于60分的学生的学号和平均成绩,并根据成绩进行倒序排序</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">sid</span> 学号,<span class="keyword">AVG</span>(grade) su <span class="keyword">FROM</span> score</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> <span class="keyword">sid</span></span><br><span class="line"><span class="keyword">HAVING</span> su&gt;<span class="number">60</span></span><br></pre></td></tr></table></figure><p>– 10.通过表连接查询出学生的姓名、课程名及成绩</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> sname 姓名,cname 课程名,grade 成绩  <span class="keyword">FROM</span> student</span><br><span class="line"><span class="keyword">JOIN</span> score <span class="keyword">ON</span></span><br><span class="line">student.<span class="string">`sid`</span>=score.<span class="string">`sid`</span></span><br><span class="line"><span class="keyword">JOIN</span> course <span class="keyword">ON</span></span><br><span class="line">score.<span class="string">`coid`</span>=course.<span class="string">`coid`</span></span><br></pre></td></tr></table></figure><h2 id="代码题"><a href="#代码题" class="headerlink" title="代码题"></a>代码题</h2><h3 id="用java实现求1到100数偶数以及个数"><a href="#用java实现求1到100数偶数以及个数" class="headerlink" title="用java实现求1到100数偶数以及个数"></a>用java实现求1到100数偶数以及个数</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"1到100之间的偶数为："</span>);</span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;<span class="number">100</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (i%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">"偶数为："</span>+i);</span><br><span class="line">            sum++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(<span class="string">"个数为："</span>+sum);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="求闰年"><a href="#求闰年" class="headerlink" title="求闰年"></a>求闰年</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">//        求2000- 2020年的闰年及个数</span></span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">2000</span>;i&lt;=<span class="number">2020</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (i%<span class="number">4</span>==<span class="number">0</span>&amp;&amp;i%<span class="number">100</span>!=<span class="number">0</span>||i%<span class="number">400</span>==<span class="number">0</span>)&#123;</span><br><span class="line">                System.out.println(<span class="string">"闰年为："</span> + i);</span><br><span class="line">                sum++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"个数为："</span> + sum);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="ArrayList"><a href="#ArrayList" class="headerlink" title="ArrayList"></a>ArrayList</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">List</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ArrayList list = <span class="keyword">new</span> ArrayList();</span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">           list.add(i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// for循环输出</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;list.size();i++)&#123;</span><br><span class="line">            System.out.println(list.get(i));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//  迭代器输出</span></span><br><span class="line">        Iterator i = list.iterator();</span><br><span class="line">        <span class="keyword">while</span>(i.hasNext())&#123;</span><br><span class="line">            System.out.println(i.next());</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//默认调用toString</span></span><br><span class="line">        System.out.println(<span class="string">"\n--------toString---------"</span>);</span><br><span class="line">        System.out.println(list);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//正向输出</span></span><br><span class="line">        System.out.println(<span class="string">"\n----正向输出---"</span>);</span><br><span class="line">        ListIterator li = list.listIterator();</span><br><span class="line">        <span class="keyword">while</span>(li.hasNext())&#123;</span><br><span class="line">            System.out.print(li.next());</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"\n-----反向输出--------"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//反向输出</span></span><br><span class="line">        <span class="keyword">while</span>(li.hasPrevious())&#123;</span><br><span class="line">            System.out.print(li.previous());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="HashMap-高性能输出"><a href="#HashMap-高性能输出" class="headerlink" title="HashMap 高性能输出"></a>HashMap 高性能输出</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    Map&lt;String,String&gt; map = <span class="keyword">new</span> HashMap&lt;String, String&gt;();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">        map.put(i+<span class="string">""</span>,i+<span class="string">""</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 默认使用tostring</span></span><br><span class="line">    System.out.println(map);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//低效</span></span><br><span class="line">    Set keys = map.keySet();</span><br><span class="line">    <span class="keyword">for</span> (Object key : keys) &#123;</span><br><span class="line">        System.out.print(key+<span class="string">"="</span>+map.get(key)+<span class="string">" "</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//高效</span></span><br><span class="line">    <span class="keyword">for</span> (Map.Entry&lt;String,String&gt; me:map.entrySet()) &#123;</span><br><span class="line">        System.out.print(me.getKey()+<span class="string">"="</span>+me.getValue()+<span class="string">" "</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h2><h3 id="面向对象的三大特征"><a href="#面向对象的三大特征" class="headerlink" title="面向对象的三大特征"></a>面向对象的三大特征</h3><ol><li>封装</li><li>继承</li><li>多态</li></ol><h3 id="类"><a href="#类" class="headerlink" title="类"></a>类</h3><ol><li>类就是相同属性和方法的集合</li><li>定义类的关键字  <strong>class</strong></li><li>类的继承  <strong>extends</strong></li></ol><h3 id="抽象类"><a href="#抽象类" class="headerlink" title="抽象类"></a>抽象类</h3><p>是一种特殊的，不能被实例化的类，只能为其他类的父类使用</p><p>使用  <strong>abstract</strong> 关键字声明</p><h3 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h3><ol><li>定义接口的关键字   <strong>interface</strong></li><li>实现接口的关键字  <strong>implements</strong></li><li>接口继承接口的关键字  <strong>extends</strong></li><li>接口是一种特殊的抽象类，也是一个特殊的类，可实现多继承</li><li>接口中的所有方法都必须是抽象方法</li><li>接口中的属性必须是常量</li><li>一个类可以实现多个接口</li></ol><h3 id="常用关键字"><a href="#常用关键字" class="headerlink" title="常用关键字"></a>常用关键字</h3><ol><li><strong>final</strong>  用来修饰类和方法，不能再有子类或者被继承</li><li><strong>static</strong>  声明静态类的成员</li></ol><h3 id="重写和重载"><a href="#重写和重载" class="headerlink" title="重写和重载"></a>重写和重载</h3><table><thead><tr><th align="center"><strong>重载</strong></th><th align="center"><strong>覆写(重写)</strong></th></tr></thead><tbody><tr><td align="center">Overloading</td><td align="center">Overriding</td></tr><tr><td align="center">方法名称相同,参数的类型或者个数不同</td><td align="center">方法名称.参数的类型.返回值类型全部相同</td></tr><tr><td align="center">放生在同样一个类中</td><td align="center">发生在继承类中</td></tr></tbody></table><p><strong>重载举例</strong>  <strong>一个类中的无参和有参构造方法..</strong><br><strong>覆写举例</strong>  <strong>一个普通类要继承抽象类的时候,就必须重写抽象类中的抽象方法</strong></p><h3 id="简答题"><a href="#简答题" class="headerlink" title="简答题"></a>简答题</h3><h4 id="表单传值方式有什么，简述其区别"><a href="#表单传值方式有什么，简述其区别" class="headerlink" title="表单传值方式有什么，简述其区别"></a>表单传值方式有什么，简述其区别</h4><ol><li>get   post </li><li>get  明文传输 ，不安全，传输快，传输量小</li><li>post  加密传输 ，安全，传输慢，传输量大</li></ol><h4 id="抽象类和接口的区别"><a href="#抽象类和接口的区别" class="headerlink" title="抽象类和接口的区别"></a>抽象类和接口的区别</h4><ol><li>【继承方式】抽象类的操作通过继承关键字extends实现，而接口的使用是通过implements关键字来实现</li><li>【属性】 抽象类中有数据成员，可以实现数据的封装，但是接口没有数据成员</li><li>【构造方法】抽象类中可以有构造方法，但是接口没有构造方法</li><li>【修饰符】抽象类的方法可以通过private、protected、public关键字修饰（抽象方法不能是private），而接口中的方法只能使用public关键字修饰</li><li>【继承关系】一个类只能继承于一个抽象类（单继承），而一个类可以同时实现多个接口。（抽象类只能被单继承，接口可以被多实现）</li><li>【普通方法】抽象类中可以有成员方法的实现代码，而接口中不可以有成员方法的实现代码</li><li>抽象类是单继承、接口是多实现</li></ol><h4 id="三个（public-protected-private）权限修饰符，修饰的范围"><a href="#三个（public-protected-private）权限修饰符，修饰的范围" class="headerlink" title="三个（public protected  private）权限修饰符，修饰的范围"></a>三个（public protected  private）权限修饰符，修饰的范围</h4><ol><li>public修饰的成员为公有的，可以在类内、子类以及类外进行访问</li><li>protected修饰的成员为受保护的，可以在类内和子类中访问</li><li>private修饰的成员为私有的，只能在本类内进行访问</li></ol><h4 id="请写出封装的含义？为什么"><a href="#请写出封装的含义？为什么" class="headerlink" title="请写出封装的含义？为什么"></a>请写出封装的含义？为什么</h4><p>主要是为了安全和方便。隐藏不想让外界直接访问到的属性或实现细节（方法），只提供访问入口</p><h4 id="请写出继承的含义？为什么"><a href="#请写出继承的含义？为什么" class="headerlink" title="请写出继承的含义？为什么"></a>请写出继承的含义？为什么</h4><p>派生类（子类）自动继承一个或多个基类（父类）中的非私有的属性和方法，并可以重写或添加新的属性或方法</p><p>代码复用</p><h4 id="请写出多态的含义？为什么"><a href="#请写出多态的含义？为什么" class="headerlink" title="请写出多态的含义？为什么"></a>请写出多态的含义？为什么</h4><p>同一类的不同对象使用同一个方法可以获得不同的结果，并可以进行方法的重写，增加了软件的灵活性和重用性</p><h4 id="什么是抽象类"><a href="#什么是抽象类" class="headerlink" title="什么是抽象类"></a>什么是抽象类</h4><ol><li>抽象类和普通类相似，都可以有成员变量和成员方法（普通方法），但不能是private的</li><li>要有一个抽象方法。即使用abstract修饰的没有方法体的方法</li><li>若一个类中存在一个抽象方法，则该类必须声明为抽象类，但一个抽象类中不是必须有抽象方法（抽象类中可以没有抽象方法）</li></ol><h4 id="简述什么是MVC"><a href="#简述什么是MVC" class="headerlink" title="简述什么是MVC"></a>简述什么是MVC</h4><ol><li>Model（模型）<ol><li>是应用程序中用于处理应用程序数据逻辑的部分</li><li>通常模型对象负责在数据库中存取数据</li></ol></li><li>View（视图）<ol><li>是应用程序中处理数据显示的部分</li><li>通常视图是依据模型数据创建的</li></ol></li><li>Controller（控制器）<ol><li>是应用程序中处理用户交互的部分</li><li>通常控制器负责从视图读取数据，控制用户输入，并向模型发送数据</li></ol></li></ol><h4 id="列出几种设计模式"><a href="#列出几种设计模式" class="headerlink" title="列出几种设计模式"></a>列出几种设计模式</h4><p>工厂方法模式、抽象工厂模式、单例模式、建造者模式、原型模式</p><p>适配器模式、装饰器模式、代理模式、外观模式、桥接模式、组合模式、享元模式。策略模式、模板方法模式、观察者模式、迭代子模式、责任链模式、命令模式、备忘录模式、状态模式、访问者模式、中介者模式、解释器模式</p><h4 id="final修饰的类和方法具有什么特点"><a href="#final修饰的类和方法具有什么特点" class="headerlink" title="final修饰的类和方法具有什么特点"></a>final修饰的类和方法具有什么特点</h4><ol><li>可以修饰类和方法，但不能修饰成员属性</li><li>final修饰的类，不能被继承</li><li>final修饰的成员方法，在子类中不能被重写</li></ol><h2 id="Spring-Boot"><a href="#Spring-Boot" class="headerlink" title="Spring Boot"></a>Spring Boot</h2><h3 id="什么是-Spring-Boot"><a href="#什么是-Spring-Boot" class="headerlink" title="什么是 Spring Boot"></a>什么是 Spring Boot</h3><p>Spring Boot是Spring社区发布的一个开源项目，旨在帮助开发者快速并且更简单的构建项目。大多数SpringBoot项目只需要很少的配置文件。开箱即用 约定大于配置 </p><h3 id="SpringBoot自动配置的原理"><a href="#SpringBoot自动配置的原理" class="headerlink" title="SpringBoot自动配置的原理"></a>SpringBoot自动配置的原理</h3><p>在spring程序main方法中 添加@SpringBootApplication或者@EnableAutoConfiguration<br>会自动去maven中读取每个starter中的spring.factories文件 该文件里配置了所有需要被创建spring容器中的bean</p><h3 id="SprinBoot读取配置文件的方式"><a href="#SprinBoot读取配置文件的方式" class="headerlink" title="SprinBoot读取配置文件的方式"></a>SprinBoot读取配置文件的方式</h3><p>springboot默认读取配置文件为application.properties或者是application.yml</p><h3 id="SpringBoot优缺点"><a href="#SpringBoot优缺点" class="headerlink" title="SpringBoot优缺点"></a>SpringBoot优缺点</h3><h4 id="优点："><a href="#优点：" class="headerlink" title="优点："></a>优点：</h4><ol><li>快速构建项目</li><li>对主流开发框架的无配置集成。</li><li>项目可独立运行，无须外部依赖Servlet容器。</li><li>提供运行时的应用监控。</li><li>极大的提高了开发、部署效率。</li><li>与云计算的天然集成。</li></ol><h4 id="缺点："><a href="#缺点：" class="headerlink" title="缺点："></a>缺点：</h4><p>如果你不认同spring框架，也许这就是缺点。</p><h3 id="SpringBoot几个常用的注解"><a href="#SpringBoot几个常用的注解" class="headerlink" title="SpringBoot几个常用的注解"></a>SpringBoot几个常用的注解</h3><ol><li>@RestController和@Controller指定一个类，作为控制器的注解 </li><li>@RequestMapping方法级别的映射注解，这一个用过Spring MVC的小伙伴相信都很熟悉 </li><li>@EnableAutoConfiguration和@SpringBootApplication是类级别的注解，根据maven依赖的jar来自动猜测完成正确的spring的对应配置，只要引入了spring-boot-starter-web的依赖，默认会自动配置Spring MVC和tomcat容器</li><li>@Configuration类级别的注解，一般这个注解，我们用来标识main方法所在的类,完成元数据bean的初始化。</li><li>@ComponentScan类级别的注解，自动扫描加载所有的Spring组件包括Bean注入，一般用在main方法所在的类上 </li><li>@ImportResource类级别注解，当我们必须使用一个xml的配置时，使用@ImportResource和@Configuration来标识这个文件资源的类。 </li><li>@Autowired注解，一般结合@ComponentScan注解，来自动注入一个Service或Dao级别的Bean</li><li>@Component类级别注解，用来标识一个组件，比如我自定了一个filter，则需要此注解标识之后，Spring Boot才会正确识别。</li></ol><h3 id="spring的IOC-和AOP"><a href="#spring的IOC-和AOP" class="headerlink" title="spring的IOC 和AOP"></a>spring的IOC 和AOP</h3><h4 id="IOC"><a href="#IOC" class="headerlink" title="IOC"></a>IOC</h4><p>IOC 控制反转<br>首先：IOC（Inverse of Contro）控制反转，有时候也被称为DI依赖注入，它是一种降低对象耦合关系的一种设计思想。</p><h4 id="AOP"><a href="#AOP" class="headerlink" title="AOP"></a>AOP</h4><p>AOP  切面编程<br>概念：AOP面向切面编程，是面向对象开发的一种补充，它允许开发人员在不改变原来模型的以满足新的需求，例如，开发人员可以在不改变原来业务逻辑模型的基础可以进行动态的增加日志，安全或异常处理功能。</p><h3 id="Spring-Boot-的核心配置文件有哪几个？它们的区别是什么？"><a href="#Spring-Boot-的核心配置文件有哪几个？它们的区别是什么？" class="headerlink" title="Spring Boot 的核心配置文件有哪几个？它们的区别是什么？"></a>Spring Boot 的核心配置文件有哪几个？它们的区别是什么？</h3><p>Spring Boot 的核心配置文件是 application 和 bootstrap 配置文件。<br>application 配置文件这个容易理解，主要用于 Spring Boot 项目的自动化配置。<br>bootstrap 配置文件有以下几个应用场景。<br>使用 Spring Cloud Config 配置中心时，这时需要在 bootstrap 配置文件中添加连接到配置中心的配置属性来加载外部配置中心的配置信息； 一些固定的不能被覆盖的属性；一些加密/解密的场景</p><h3 id="Spring-Boot-的配置文件有哪几种格式？它们有什么区别？"><a href="#Spring-Boot-的配置文件有哪几种格式？它们有什么区别？" class="headerlink" title="Spring Boot 的配置文件有哪几种格式？它们有什么区别？"></a>Spring Boot 的配置文件有哪几种格式？它们有什么区别？</h3><p>properties和.yml</p><p>yml拥有天然的树状结构；</p><p>在properties文件中是以”.”进行分割的， 在.yml中是用”:”进行分割；</p><p>.yml的数据格式是K-V格式（和json很像），并且通过”:”进行赋值；</p><p>在.yml中缩进一定不能使用TAB，否则会报很奇怪的错误；</p><p>每个k的冒号后面一定都要加一个空格；</p><p>.yml比.properties对中文对支持更友好。</p><h3 id="Spring-Boot-需要独立的容器运行吗？"><a href="#Spring-Boot-需要独立的容器运行吗？" class="headerlink" title="Spring Boot 需要独立的容器运行吗？"></a>Spring Boot 需要独立的容器运行吗？</h3><p>可以不需要，内置了 Tomcat/ Jetty 等容器。</p><h3 id="运行-Spring-Boot-有哪几种方式"><a href="#运行-Spring-Boot-有哪几种方式" class="headerlink" title="运行 Spring Boot 有哪几种方式"></a>运行 Spring Boot 有哪几种方式</h3><p>1.打包用命令或者放到容器中运行<br>2.用 Maven/ Gradle 插件运行<br>3.直接执行 main 方法</p><h3 id="如何集成Spring-Boot和ActiveMQ？"><a href="#如何集成Spring-Boot和ActiveMQ？" class="headerlink" title="如何集成Spring Boot和ActiveMQ？"></a>如何集成Spring Boot和ActiveMQ？</h3><p>对于集成Spring Boot和ActiveMQ，我们使用spring-boot-starter-activemq 依赖关系。 它只需要很少的配置，并且不需要样板代码。</p><h3 id="什么是Swagger？你用Spring-Boot实现了它吗？"><a href="#什么是Swagger？你用Spring-Boot实现了它吗？" class="headerlink" title="什么是Swagger？你用Spring Boot实现了它吗？"></a>什么是Swagger？你用Spring Boot实现了它吗？</h3><p>Swagger广泛用于可视化API，使用Swagger UI为前端开发人员提供在线沙箱。Swagger是用于生成RESTful Web服务的可视化表示的工具，规范和完整框架实现。它使文档能够以与服务器相同的速度更新。当通过Swagger正确定义时，消费者可以使用最少量的实现逻辑来理解远程服务并与其进行交互。因此，Swagger消除了调用服务时的猜测。</p><h3 id="如何使用Spring-Boot实现异常处理？"><a href="#如何使用Spring-Boot实现异常处理？" class="headerlink" title="如何使用Spring Boot实现异常处理？"></a>如何使用Spring Boot实现异常处理？</h3><p>Spring提供了一种使用ControllerAdvice处理异常的非常有用的方法。 我们通过实现一个ControlerAdvice类，来处理控制器类抛出的所有异常。</p><h3 id="RequestMapping-和-GetMapping-的不同之处在哪里？"><a href="#RequestMapping-和-GetMapping-的不同之处在哪里？" class="headerlink" title="RequestMapping 和 GetMapping 的不同之处在哪里？"></a>RequestMapping 和 GetMapping 的不同之处在哪里？</h3><p>RequestMapping 具有类属性的，可以进行 GET,POST,PUT 或者其它的注释中具有的请求方法。<br>GetMapping 是 GET 请求方法中的一个特例。它只是 ResquestMapping 的一个延伸，目的是为了提高清晰度。</p><h3 id="Spring-Boot-可以兼容老-Spring-项目吗，如何做"><a href="#Spring-Boot-可以兼容老-Spring-项目吗，如何做" class="headerlink" title="Spring Boot 可以兼容老 Spring 项目吗，如何做?"></a>Spring Boot 可以兼容老 Spring 项目吗，如何做?</h3><p>可以兼容，使用 @ImportResource 注解导入老 Spring 项目配置文件。</p><h3 id="你如何理解-Spring-Boot-中的-Starters"><a href="#你如何理解-Spring-Boot-中的-Starters" class="headerlink" title="你如何理解 Spring Boot 中的 Starters?"></a>你如何理解 Spring Boot 中的 Starters?</h3><p>Starters可以理解为启动器，它包含了一系列可以集成到应用里面的依赖包，你可以一站式集成 Spring 及其他技术，而不需要到处找示例代码和依赖包。如你想使用 Spring JPA 访问数据库，只要加入 spring-boot-starter-data-jpa 启动器依赖就能使用了。</p><h3 id="Spring-Boot-支持哪些日志框架？推荐和默认的日志框架是哪个"><a href="#Spring-Boot-支持哪些日志框架？推荐和默认的日志框架是哪个" class="headerlink" title="Spring Boot 支持哪些日志框架？推荐和默认的日志框架是哪个?"></a>Spring Boot 支持哪些日志框架？推荐和默认的日志框架是哪个?</h3><p>Spring Boot 支持 Java Util Logging, Log4j2, Lockback 作为日志框架，如果你使用 Starters 启动器，Spring Boot 将使用 Logback 作为默认日志框架.</p><h3 id="Spring-Boot-实现热部署有哪几种方式？"><a href="#Spring-Boot-实现热部署有哪几种方式？" class="headerlink" title="Spring Boot 实现热部署有哪几种方式？"></a>Spring Boot 实现热部署有哪几种方式？</h3><ol><li><p>Spring Loaded</p><p>2.Spring-boot-devtools</p></li></ol><h3 id="Spring-boot项目的开发环境-生产环境配置该如何实现切换"><a href="#Spring-boot项目的开发环境-生产环境配置该如何实现切换" class="headerlink" title="Spring boot项目的开发环境,生产环境配置该如何实现切换."></a>Spring boot项目的开发环境,生产环境配置该如何实现切换.</h3><p>profile配置:</p><p>spring-boot默认为了支持不同的配置环境. </p><p>配置步骤: 1.提供环境:</p><p>  按照命名模板:application-{profile}.properties(例如: application-pro1.properties/application-pro2.properties)</p><p>  2.选择激活的环境:</p><p>application.properties中设置:spring.profiles.active=pro1</p><h3 id="13-如何使用Spring-Boot实现分页和排序？"><a href="#13-如何使用Spring-Boot实现分页和排序？" class="headerlink" title="13. 如何使用Spring Boot实现分页和排序？"></a>13. 如何使用Spring Boot实现分页和排序？</h3><p>使用Spring Boot实现分页非常简单。使用Spring Data-JPA可以实现将可分页的org.springframework.data.domain.Pageable传递给存储库方法。</p><h2 id="Mybatis"><a href="#Mybatis" class="headerlink" title="Mybatis"></a>Mybatis</h2><h3 id="什么是MyBatis？"><a href="#什么是MyBatis？" class="headerlink" title="什么是MyBatis？"></a>什么是MyBatis？</h3><p>MyBatis是一个可以自定义SQL、存储过程和高级映射的持久层框架。</p><h3 id="请描述下MyBatis的缓存"><a href="#请描述下MyBatis的缓存" class="headerlink" title="请描述下MyBatis的缓存?"></a>请描述下MyBatis的缓存?</h3><p>MyBatis的缓存分为一级缓存和二级缓存,一级缓存放在session里面,默认就有,二级缓存放在它的命名空间里,默认是不打开的,使用二级缓存属性类需要实现Serializable序列化接口(可用来保存对象的状态),可在它的映射文件中配置&lt; cache/&gt;</p><h3 id="和-的区别是什么？"><a href="#和-的区别是什么？" class="headerlink" title="#{}和${}的区别是什么？"></a>#{}和${}的区别是什么？</h3><ol><li>#{}是预编译处理，${}是字符串替换。</li><li>Mybatis在处理#{}时，会将sql中的#{}替换为?号，调用PreparedStatement的set方法来赋值；</li><li>Mybatis在处理${}时，就是把${}替换成变量的值。</li><li>使用#{}可以有效的防止SQL注入，提高系统安全性。</li></ol><h3 id="MyBatis框架适用场合"><a href="#MyBatis框架适用场合" class="headerlink" title="MyBatis框架适用场合?"></a>MyBatis框架适用场合?</h3><ol><li>MyBatis专注于SQL本身，是一个足够灵活的DAO层解决方案</li><li>对性能的要求很高，或者需求变化较多的项目，如互联网项目，MyBatis将是不错的选择</li></ol><h3 id="Mybatis分为哪三层"><a href="#Mybatis分为哪三层" class="headerlink" title="Mybatis分为哪三层"></a>Mybatis分为哪三层</h3><p>（1）API接口层：提供给外部使用的接口API</p><p> （2）数据处理层：负责具体的SQL</p><p> （3）基础支撑层：负责最基础的功能支撑，如连接管理，事务管理，配置加载和缓存处理</p><h3 id="什么情况下用注解绑定-什么情况下用xml绑定？"><a href="#什么情况下用注解绑定-什么情况下用xml绑定？" class="headerlink" title="什么情况下用注解绑定,什么情况下用xml绑定？"></a>什么情况下用注解绑定,什么情况下用xml绑定？</h3><p>当Sql语句比较简单时候,用注解绑定；当SQL语句比较复杂时候,用xml绑定,一般用xml绑定的比较多</p><h3 id="在mapper中如何传递多个参数？"><a href="#在mapper中如何传递多个参数？" class="headerlink" title="在mapper中如何传递多个参数？"></a>在mapper中如何传递多个参数？</h3><p>1）直接在方法中传递参数，xml文件用#{0} #{1}来获取</p><p>2）使用 @param 注解:这样可以直接在xml文件中通过#{name}来获取</p><h3 id="resultType-resultMap的区别？"><a href="#resultType-resultMap的区别？" class="headerlink" title="resultType resultMap的区别？"></a>resultType resultMap的区别？</h3><p>1）类的名字和数据库相同时，可以直接设置resultType参数为Pojo类</p><p>2）若不同，需要设置resultMap 将结果名字和Pojo名字进行转换</p><h3 id="MyBatis的优点和缺点"><a href="#MyBatis的优点和缺点" class="headerlink" title="MyBatis的优点和缺点?"></a>MyBatis的优点和缺点?</h3><h4 id="优点？"><a href="#优点？" class="headerlink" title="优点？"></a>优点？</h4><p>1）把Sql语句从Java中独立出来, 解除 sql 与程序代码的耦合，便于统一管理；</p><p>2）封装了底层的JDBC，简化了Java数据库编程的重复工作。</p><h4 id="缺点"><a href="#缺点" class="headerlink" title="缺点?"></a>缺点?</h4><p>1）SQL 语句的编写工作量较大，尤其当字段多、关联表多时，对开发人员编写</p><p>2）SQL 语句的功底有一定要求。</p><p>3）SQL 语句依赖于数据库，导致数据库移植性差，不能随意更换数据库。</p><h3 id="Mybais-基本注解有什么-？"><a href="#Mybais-基本注解有什么-？" class="headerlink" title="Mybais 基本注解有什么 ？"></a>Mybais 基本注解有什么 ？</h3><p>@Insert简单插入</p><p>@Upload简单修改</p><p>@Delete简单删除</p><p>@Select简单查询</p><h3 id="Mybatis的表关联的映射有哪几种？"><a href="#Mybatis的表关联的映射有哪几种？" class="headerlink" title="Mybatis的表关联的映射有哪几种？"></a>Mybatis的表关联的映射有哪几种？</h3><p>一对一查询： 一对多查询： 多对多查询：</p><h3 id="mybatis是如何解决JDBC存在的问题？"><a href="#mybatis是如何解决JDBC存在的问题？" class="headerlink" title="mybatis是如何解决JDBC存在的问题？"></a>mybatis是如何解决JDBC存在的问题？</h3><p>mybatis将sql语句配置在一个xml文件中与Java代码分离，这样利于维护，</p><p>还有mybatis将自动封装Java对象映射到sql语句。</p><h3 id="使用Mybatis框架时-当实体类中的属性名和表中的字段名不一样，怎么办？"><a href="#使用Mybatis框架时-当实体类中的属性名和表中的字段名不一样，怎么办？" class="headerlink" title="使用Mybatis框架时 当实体类中的属性名和表中的字段名不一样，怎么办？"></a>使用Mybatis框架时 当实体类中的属性名和表中的字段名不一样，怎么办？</h3><p>​    写SQL语句时起别名</p><p>​    在MyBatis的全局配置文件中开启驼峰命名规则</p><h2 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h2><h3 id="选择题"><a href="#选择题" class="headerlink" title="选择题"></a>选择题</h3><ol><li><p>以下哪一个是linux内核的稳定版本（   B ）</p><p>A．2.5.24    B. 2.6.17     C. 1.7.18    D. 2.3.20</p></li><li><p>怎样显示当前目录（  A  ）。</p><p>A. pwd     B. cd     C. who       D. ls</p></li><li><p>欲把当前目录下的 file1.txt 复制为 file2.txt，正确的命令是（  D ）。</p><p>A. copy file1.txt file2.txt     B. cp file1.txt | file2.txt</p><p>C. cat file2.txt file1.txt     D. cat file1.txt &gt; file2.txt  </p></li><li><p>如果您想列出当前目录以及子目录下所有扩展名为“.txt”的文件，那么您可以使用的命令是（  A  ）。</p><p>A. ls *.txt  B. find . –name “.txt”  C. ls –d .txt    D. find . “.txt”</p></li><li><p>如何删除一个非空子目录 /tmp（B  ）。</p><p>A. del /tmp/*  B. rm -rf /tmp   C. rm -Ra /tmp/*  D. rm –rf /tmp/*</p></li><li><p>存放用户帐号的文件是（   C ）。</p><p>A. shadow   B. group     C. passwd     D. Gshadow</p></li><li><p>下面哪个系统目录中包含Linux使用的外部设备（  B ）。</p><p>A. /bin     B. /dev     C. /boot      D. /home</p></li><li><p>在vi编辑器中的命令模式下，键入（ B  ）可在光标当前所在行下添加一新行</p><p>A.O   B. o        C. i        D. a</p></li><li><p>在vi编辑器中的命令模式下，重复上一次对编辑的文本进行的操作，可使用（  C ）命令。</p><p>A．上箭头     B. 下箭头     C .          D. a</p></li><li><p>删除文件命令为（D）</p><p> A．mkdir     B. move     C. mv        D. rm</p></li><li><p>假设文件fileA的符号链接(又叫软连接)为fileB，那么删除fileA后，下面的描述正确的是（  B  ）</p><p>A．fileB也随之被删除</p><p>B. fileB仍存在，但是属于无效文件</p><p>C. 因为fileB未被删除，所以fileA会被系统自动重新建立    </p><p>D. fileB会随fileA的删除而被系统自动删除</p></li><li><p>从后台启动进程，应在命令的结尾加上符号（ A  ）</p><p>A．&amp;      B. @      C. #       D. $</p></li><li><p>如果执行命令 chmod 746 file.txt，那么该文件的权限是（    A）</p><p>A. rwxr–rw-   B. rw-r–r–   C. –xr—rwx    D. rwxr–r—</p></li><li><p>Linux有三个查看文件的命令，若希望在查看文件内容过程中可以用光标上下移动来查看文件内容，应使用命令（C  ）</p><p>A．cat      B. more      C. less      D. menu</p></li><li><p>在使用mkdir命令创建新的目录时，在其父目录不存在时先创建父目录的选项是（   B）</p><p>A．-m       B. -p       C. -f        D.-d</p></li><li><p>若一台计算机的内存为 128MB, ，则交换分区的大小通常是（ C)</p><p>A.64MB   B.128mb C.256MB  D.512MB</p></li><li><p>关闭linux系统（不重新启动）可使用-命令（   C ）</p><p>A．ctrl+alt+del  B．shutdown  -r   C．halt  D．reboot</p></li><li><p>对文件进行归档的命令为（ B )</p><p>A．gzip      B．tar     C．dump      D．dd</p></li><li><p> NFS 是（C）系统</p><p>A.文件  B.磁盘 C.网络文件 D.操作</p></li><li><p>下列那一个指令可以设定使用者的密码（   C）</p><p>A．pwd     B．newpwd   C．passwd     D．password</p></li><li><p>下列那一个指令可以切换使用者身份（D    ）</p><p>A．passwd    B．log      C．who     D．su</p></li><li><p>下列那一个指令可以显示目录的大小（   C  ）</p><p>A．dd      B．df      C．du       D．dw</p></li><li><p>下面哪个系统目录中存放了系统引导、启动时使用的一些文件和目录（  D）。</p><p>A./root     B. /bin      C. /dev      D. /boot </p></li><li><p>如何删除目录 /tmp下的所有文件及子目录（ D  ）。</p><p>A. del /tmp/*  B. rm -rf /tmp   C. rm -Ra /tmp/*  D. rm –rf /tmp/*</p></li><li><p>对文件重命名的命令为（C ）</p><p>A．rm      B. move     C. mv        D. mkdir</p></li><li><p>以下哪个环境变量表示当前路径（  B ）。</p><p>A. PATH    B. PWD     C. HOME       D.ROOT</p></li></ol><h3 id="填空题"><a href="#填空题" class="headerlink" title="填空题"></a>填空题</h3><ol><li>默认情况下，超级用户和普通用户的登录提示符分别是：（#和$）。</li><li>链接分为：（   软链接和硬链接   ）</li><li>删除文件命令为                                            （  rm -rf）</li><li>存放用户帐号的文件是                                  (  passwd ）</li><li>如何删除目录 /tmp下的所有文件及子目录  （  rm -rf /tmp/*） </li><li>如何删除一个非空子目录                              （   rm -rf  ）</li></ol><h3 id="简单题"><a href="#简单题" class="headerlink" title="简单题"></a>简单题</h3><h4 id="Linux文件有几种典型的权限，分别是？普通文件权限和目录权限的区别是"><a href="#Linux文件有几种典型的权限，分别是？普通文件权限和目录权限的区别是" class="headerlink" title="Linux文件有几种典型的权限，分别是？普通文件权限和目录权限的区别是"></a>Linux文件有几种典型的权限，分别是？普通文件权限和目录权限的区别是</h4><ol><li>r（read）读</li><li>w（write） 写</li><li>x （execute） 执行</li></ol><p><strong>区别</strong></p><ol><li>-，普通文件。</li><li>d，目录文件，d是directory的简写。</li></ol><h4 id="若下达rmdir命令来删除某个已存在的目录，但无法成功，请说明可能的原因"><a href="#若下达rmdir命令来删除某个已存在的目录，但无法成功，请说明可能的原因" class="headerlink" title="若下达rmdir命令来删除某个已存在的目录，但无法成功，请说明可能的原因"></a>若下达rmdir命令来删除某个已存在的目录，但无法成功，请说明可能的原因</h4><ol><li>此目录可能不存在</li><li>目录不为空</li><li>目录中有隐含文件存在</li><li>目录被设置了权限，解决方法：先修改权限，在使用rm_r命令删除</li></ol><h4 id="与其他操作系统相比，Linux具有那些显著的特点"><a href="#与其他操作系统相比，Linux具有那些显著的特点" class="headerlink" title="与其他操作系统相比，Linux具有那些显著的特点"></a>与其他操作系统相比，Linux具有那些显著的特点</h4><ol><li>linux是免费的和开放源代码的系统</li><li>系统由于开放源代码所以其系统是由全球的爱好者和程序员共同维护，带来的好处就是<strong>有漏洞很快可以修复</strong></li><li>基本上现在网站服务器系统linux占有绝对优势地位</li></ol><h4 id="vi编辑器有哪几种工作模式？如何在这几种工作模式之间转换"><a href="#vi编辑器有哪几种工作模式？如何在这几种工作模式之间转换" class="headerlink" title="vi编辑器有哪几种工作模式？如何在这几种工作模式之间转换"></a>vi编辑器有哪几种工作模式？如何在这几种工作模式之间转换</h4><h5 id="命令模式"><a href="#命令模式" class="headerlink" title="命令模式"></a>命令模式</h5><p>若想要编辑文本：启动Vim，进入了命令模式，按下i，切换到输入模式。</p><h5 id="输入模式"><a href="#输入模式" class="headerlink" title="输入模式"></a>输入模式</h5><p>在输入模式下按Esc键回到命令模式</p><h5 id="末行模式-底线命令模式"><a href="#末行模式-底线命令模式" class="headerlink" title="末行模式 (底线命令模式)"></a>末行模式 (底线命令模式)</h5><p>在命令模式下按下:（英文冒号）就进入了底线命令模式</p><ul><li>q 退出程序</li><li>w 保存文件</li></ul><h4 id="linux试述如何创建一个用户"><a href="#linux试述如何创建一个用户" class="headerlink" title="linux试述如何创建一个用户"></a>linux试述如何创建一个用户</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">useradd test &#x2F;&#x2F;*建立用户test*&#x2F;&#x2F;</span><br><span class="line"></span><br><span class="line">passwd test &#x2F;&#x2F;*设置用户test密码*&#x2F;&#x2F;</span><br><span class="line">        修改&#x2F;etc&#x2F;password文件</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;贵鹏整理</span><br><span class="line"></span><br><span class="line">useradd 选项 用户名</span><br><span class="line"></span><br><span class="line">参数说明：选项 :</span><br><span class="line">   -c comment 指定一段注释性描述。</span><br><span class="line">   -d 目录 指定用户主目录，如果此目录不存在，则同时使用-m选项，可以创建主目录。</span><br><span class="line">   -g 用户组 指定用户所属的用户组。</span><br><span class="line">   -G 用户组，用户组 指定用户所属的附加组。</span><br><span class="line">   -m　使用者目录如不存在则自动建立。</span><br><span class="line">   -s Shell文件 指定用户的登录Shell。</span><br><span class="line">   -u 用户号 指定用户的用户号，如果同时有-o选项，则可以重复使用其他用户的标识</span><br></pre></td></tr></table></figure><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="JSON"><a href="#JSON" class="headerlink" title="JSON"></a>JSON</h3><p>json是一种轻量级的数据交换格式。具有体积小,传输快</p><h3 id="Ajax"><a href="#Ajax" class="headerlink" title="Ajax"></a>Ajax</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">            <span class="comment">//请求方式</span></span><br><span class="line">            type : <span class="string">"POST"</span>,</span><br><span class="line">            <span class="comment">//请求的媒体类型</span></span><br><span class="line">            contentType: <span class="string">"application/json;charset=UTF-8"</span>,</span><br><span class="line">            <span class="comment">//请求地址</span></span><br><span class="line">            url : <span class="string">"http://127.0.0.1/admin/list/"</span>,</span><br><span class="line">            <span class="comment">//数据，json字符串</span></span><br><span class="line">            data : JSON.stringify(list),</span><br><span class="line">            <span class="comment">//请求成功</span></span><br><span class="line">            success : function(result) &#123;</span><br><span class="line">                console.log(result);</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">//请求失败，包含具体的错误信息</span></span><br><span class="line">            error : function(e)&#123;</span><br><span class="line">                console.log(e.status);</span><br><span class="line">                console.log(e.responseText);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure><h3 id="同步-异步的概念和区别"><a href="#同步-异步的概念和区别" class="headerlink" title="同步.异步的概念和区别"></a>同步.异步的概念和区别</h3><p>一、同步、异步概念</p><p>1.同步， 提交请求 -&gt;服务器进行处理-&gt;等待结果（这个期间，你不能做任何事，只有收到服务器的结果后，才可进行其他操作）</p><p>2.异步， 提交请求-&gt;服务器处理（这个期间你不用等待服务器的结果，你可去干自己的事情了）-&gt;处理完毕</p><p>二、ajax同步、异步区别</p><p>1.异步：现在的大多数项目，都是使用ajax的异步请求。因为这样能过避免服务器的检索给用户带来的时间延迟。异步传输，总是悄悄进行着，用户根本不知道这后面都发生了什么事，用户只要专注着操作浏览器界面就好了，这个对于用户体验来说，非常好。</p><p>2.同步：发完一个请求时，就一直处于等待状态。比如，你的鼠标一直显示着转啊转哈，直到服务器把数据处理完毕了，再告知浏览器现在可以了，你可以操作其他事情了，可是这对于用户是一个多么痛苦的体验，为了这个请求，页面一直无法操作，就像浏览器“死机”了一样 。所以，同步请求最好慎用。</p><p><strong>同步、异步，各有春秋，处于什么场景，就用什么</strong></p><h3 id="JDBC的优点和缺点"><a href="#JDBC的优点和缺点" class="headerlink" title="JDBC的优点和缺点"></a>JDBC的优点和缺点</h3><h4 id="优点"><a href="#优点" class="headerlink" title="优点?"></a>优点?</h4><p>直接底层操作，提供了很简单、便捷的访问数据库的方法，跨平台性比较强。灵活性比较强，可以写很复杂的SQL语句。</p><h4 id="缺点-1"><a href="#缺点-1" class="headerlink" title="缺点?"></a>缺点?</h4><p>操作比较繁琐，很多代码需要重复写很多次。</p><p>如果遇到批量操作，频繁与数据库进行交互，容易造成效率的下降。</p><h3 id="数组的两个异常"><a href="#数组的两个异常" class="headerlink" title="数组的两个异常"></a>数组的两个异常</h3><ol><li>下标越界异常</li><li>空指针异常</li></ol>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>常用pom依赖</title>
      <link href="/posts/3093554046/"/>
      <url>/posts/3093554046/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><center><font color="red" size="5"> 持续更新中!!!!</font></center># log4j<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;log4j&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;log4j&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.2.17&lt;&#x2F;version&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure><h1 id="Spring整合SpringSecurity"><a href="#Spring整合SpringSecurity" class="headerlink" title="Spring整合SpringSecurity"></a>Spring整合SpringSecurity</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-security<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.1.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="Spring整合Shiro"><a href="#Spring整合Shiro" class="headerlink" title="Spring整合Shiro"></a>Spring整合Shiro</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.apache.shiro/shiro-spring --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.shiro<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>shiro-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="spring整合mybatis"><a href="#spring整合mybatis" class="headerlink" title="spring整合mybatis"></a>spring整合mybatis</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- https://mvnrepository.com/artifact/log4j/log4j --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.alibaba/druid --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="Spring整合thymeleaf模板"><a href="#Spring整合thymeleaf模板" class="headerlink" title="Spring整合thymeleaf模板"></a>Spring整合thymeleaf模板</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--thymeleaf模板--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.thymeleaf<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>thymeleaf-spring5<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.thymeleaf.extras<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>thymeleaf-extras-java8time<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="lombok"><a href="#lombok" class="headerlink" title="lombok"></a>lombok</h1><p> @Data 注解的主要作用是提高代码的简洁，使用这个注解可以省去代码中大量的get()、 set()、 toString()等方法； </p><ul><li>@AllArgsConstructor<br>使用后添加一个构造函数，该构造函数含有所有已声明字段属性参数</li><li>@NoArgsConstructor<br>使用后创建一个无参构造函数</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.16.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="Druid数据源"><a href="#Druid数据源" class="headerlink" title="Druid数据源"></a>Druid数据源</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="thymeleaf-和security整合"><a href="#thymeleaf-和security整合" class="headerlink" title="thymeleaf 和security整合"></a>thymeleaf 和security整合</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- thymeleaf 和security整合 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.thymeleaf.extras<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>thymeleaf-extras-springsecurity5<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.4.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="thymeleaf-和shiro整合"><a href="#thymeleaf-和shiro整合" class="headerlink" title="thymeleaf 和shiro整合"></a>thymeleaf 和shiro整合</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.theborakompanioni<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>thymeleaf-extras-shiro<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Maven </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot整合SpringSecurity</title>
      <link href="/posts/2100227203/"/>
      <url>/posts/2100227203/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="认识SpringSecurity"><a href="#认识SpringSecurity" class="headerlink" title="认识SpringSecurity"></a>认识SpringSecurity</h1><p>Spring Security 是针对Spring项目的安全框架，也是Spring Boot底层安全模块默认的技术选型，他可 </p><p>以实现强大的Web安全控制，对于安全控制，我们仅需要引入 spring-boot-starter-security 模 </p><p>块，进行少量的配置，即可实现强大的安全管理！ </p><p>记住几个类： </p><p>WebSecurityConfifigurerAdapter： 自定义Security策略 </p><p>AuthenticationManagerBuilder：自定义认证策略 </p><p>@EnableWebSecurity：开启WebSecurity模式 </p><p>Spring Security的两个主要目标是 “认证” 和 “授权”（访问控制）。 </p><p>认证<strong>(Authentication）</strong></p><p>身份验证是关于验证您的凭据，如用户名/用户ID和密码，以验证您的身份。 </p><p>身份验证通常通过用户名和密码完成，有时与身份验证因素结合使用。 </p><p>授权 <strong>（Authorization）</strong> </p><p>授权发生在系统成功验证您的身份后，最终会授予您访问资源（如信息，文件，数据库，资金，位置， </p><p>几乎任何内容）的完全权限。 </p><p>这个概念是通用的，而不是只在Spring Security 中存在。 </p><h1 id="SpringBoot整合SpringSecurity"><a href="#SpringBoot整合SpringSecurity" class="headerlink" title="SpringBoot整合SpringSecurity"></a>SpringBoot整合SpringSecurity</h1><p>引入pom文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-security<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>编写Spring Security 配置类 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.builders.HttpSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;</span><br><span class="line"></span><br><span class="line"><span class="meta">@EnableWebSecurity</span> <span class="comment">//开启security</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">securityConfig</span> <span class="keyword">extends</span> <span class="title">WebSecurityConfigurerAdapter</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        http.authorizeRequests()</span><br><span class="line">                <span class="comment">// 首页所有人可以访问  登录控制器</span></span><br><span class="line">                .antMatchers(<span class="string">"/index"</span>).permitAll()</span><br><span class="line">                <span class="comment">// level1下面的界面只能vip1访问</span></span><br><span class="line">                .antMatchers(<span class="string">"/level1/**"</span>).hasRole(<span class="string">"vip1"</span>)</span><br><span class="line">                <span class="comment">// level2下面的界面只能vip2访问</span></span><br><span class="line">                .antMatchers(<span class="string">"/level2/**"</span>).hasRole(<span class="string">"vip2"</span>)</span><br><span class="line">                <span class="comment">// level3下面的界面只能vip3访问</span></span><br><span class="line">                .antMatchers(<span class="string">"/level3/**"</span>).hasRole(<span class="string">"vip3"</span>);</span><br><span class="line">        ;</span><br><span class="line">        <span class="comment">//没有登录,跳转登录页</span></span><br><span class="line">        <span class="comment">//formLogin 自动跳转登录页 /login</span></span><br><span class="line">        <span class="comment">///loginPage 因为默认比较难看 所以可以自定义配置登录页</span></span><br><span class="line">        <span class="comment">// loginProcessingUrl 自定义权限验证地址</span></span><br><span class="line">        <span class="comment">//.passwordParameter(). 自定义参数名字 默认password</span></span><br><span class="line">        <span class="comment">//usernameParameter()   自定义参数   默认username</span></span><br><span class="line">        http.formLogin().loginPage(<span class="string">"/toLogin"</span>).loginProcessingUrl(<span class="string">"/usr/login"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//logout()  开启注销功能呢</span></span><br><span class="line">        <span class="comment">//logoutSuccessUrl("/index")  自定义注销返回的界面(主页)</span></span><br><span class="line">        http.logout().logoutSuccessUrl(<span class="string">"/index"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//默认开启 csrf默认开启,需要用 http.csrf().disable()关闭，不然退出,出现 404</span></span><br><span class="line">        http.csrf().disable();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// rememberMe()  开启记住我功能</span></span><br><span class="line">        <span class="comment">// rememberMeParameter("&lt;记住我&gt;前端参数")</span></span><br><span class="line">        http.rememberMe().rememberMeParameter(<span class="string">"remember"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//授权验证 给不同的用户分匹配角色</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(AuthenticationManagerBuilder auth)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//读取内存的用户,多个用户用and()进行连接</span></span><br><span class="line">        <span class="comment">// 并授权给每个用户不同的等级 设置密码的时候需要进行加密</span></span><br><span class="line">        auth.inMemoryAuthentication().passwordEncoder(<span class="keyword">new</span> BCryptPasswordEncoder())</span><br><span class="line">               .withUser(<span class="string">"vip1"</span>).password(<span class="keyword">new</span> BCryptPasswordEncoder().encode(<span class="string">"123456"</span>)).roles(<span class="string">"vip1"</span>)</span><br><span class="line">               .and()</span><br><span class="line">               .withUser(<span class="string">"vip2"</span>).password(<span class="keyword">new</span> BCryptPasswordEncoder().encode(<span class="string">"123456"</span>)).roles(<span class="string">"vip1"</span>,<span class="string">"vip2"</span>)</span><br><span class="line">               .and()</span><br><span class="line">               .withUser(<span class="string">"vip3"</span>).password(<span class="keyword">new</span> BCryptPasswordEncoder().encode(<span class="string">"123456"</span>)).roles(<span class="string">"vip1"</span>,<span class="string">"vip2"</span>,<span class="string">"vip3"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> SpringSecurity </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot集成Swagger</title>
      <link href="/posts/1553907358/"/>
      <url>/posts/1553907358/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="创建SpringBoot项目"><a href="#创建SpringBoot项目" class="headerlink" title="创建SpringBoot项目"></a>创建SpringBoot项目</h1><p> <a href="https://www.csde.vip/posts/579658706/">https://www.csde.vip/posts/579658706/</a> </p><h1 id="引入pom依赖"><a href="#引入pom依赖" class="headerlink" title="引入pom依赖"></a>引入pom依赖</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--swagger依赖--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/io.springfox/springfox-swagger2 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/io.springfox/springfox-swagger-ui --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger-ui<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="配置swagger配置"><a href="#配置swagger配置" class="headerlink" title="配置swagger配置"></a>配置swagger配置</h1><p><img src="https://cdn.jsdelivr.net/gh/1790735465/butterfly_image/img/20200612093702.png" alt></p><p><strong>图片上的是必须不是必选</strong></p><p><strong>如果不配置做swagger信息都是默认的,只需要在配置类上加上</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span>  </span><br><span class="line"><span class="meta">@EnableSwagger</span>2 <span class="comment">//开启swagger2</span></span><br></pre></td></tr></table></figure><p>这2个注解开启swagger</p><p>访问swagger界面 <a href="http://127.0.0.1:端口号/swagger-ui.html">http://127.0.0.1:端口号/swagger-ui.html</a> </p><p><img src="https://cdn.jsdelivr.net/gh/1790735465/butterfly_image/img/20200612094348.png" alt></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.builders.RequestHandlerSelectors;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.service.ApiInfo;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.service.Contact;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.service.VendorExtension;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.spi.DocumentationType;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.spring.web.plugins.Docket;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.swagger2.annotations.EnableSwagger2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.color.ProfileDataException;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span>  </span><br><span class="line"><span class="meta">@EnableSwagger</span>2 <span class="comment">//开启swagger2</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">swaggerConfig</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Docket <span class="title">docket</span><span class="params">()</span></span>&#123; <span class="comment">////Environment environment</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        Profiles profile=Profiles.of("dev");</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        Boolean  flag=environment.acceptsProfiles(profile);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        System.out.println(flag);</span></span><br><span class="line">        <span class="keyword">return</span>  <span class="keyword">new</span> Docket(DocumentationType.SWAGGER_2)</span><br><span class="line">                .groupName(<span class="string">"A的swagger"</span>) <span class="comment">//分组  如果要多组,就复制这个方法docket();</span></span><br><span class="line">                <span class="comment">//是否开启swagger</span></span><br><span class="line">                .enable(<span class="keyword">true</span>)</span><br><span class="line">                .apiInfo(apiInfo())</span><br><span class="line">                .select()</span><br><span class="line">                <span class="comment">//RequestHandlerSelectors, 配置要扫描的接口方式</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">//basePackage 指定包下扫描</span></span><br><span class="line">                <span class="comment">//扫描全部 any()</span></span><br><span class="line">                <span class="comment">// 都不扫描none()</span></span><br><span class="line">                <span class="comment">//扫描类上的注解 withClassAnnotation()</span></span><br><span class="line">                <span class="comment">//扫描类方法的注解 withMethodAnnotation()</span></span><br><span class="line">                .apis(RequestHandlerSelectors.withMethodAnnotation(PostMapping<span class="class">.<span class="keyword">class</span>))</span></span><br><span class="line"><span class="class">                .<span class="title">build</span>()</span></span><br><span class="line"><span class="class">                </span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Contact contact=<span class="keyword">new</span> Contact(<span class="string">"A"</span>,<span class="string">"https://www.csde.vip/"</span>,<span class="string">"1790735465@qq.com"</span>);</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ApiInfo <span class="title">apiInfo</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span>  <span class="keyword">new</span> ApiInfo(</span><br><span class="line">                <span class="string">"A的swagger信息"</span>,</span><br><span class="line">                <span class="string">"A用户Api文档"</span>,</span><br><span class="line">                <span class="string">"1.1"</span>,</span><br><span class="line">                <span class="string">"urn:tos"</span>   ,</span><br><span class="line">                contact,</span><br><span class="line">                <span class="string">"Apache 2.0"</span>,</span><br><span class="line">                <span class="string">"http://www.apache.org/licenses/LICENSE-2.0"</span>,</span><br><span class="line">                <span class="keyword">new</span> ArrayList&lt;VendorExtension&gt;());</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/1790735465/butterfly_image/img/20200612094851.png" alt></p><h1 id="配置分组信息"><a href="#配置分组信息" class="headerlink" title="配置分组信息"></a>配置分组信息</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">   <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Docket <span class="title">docket1</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span>  <span class="keyword">new</span> Docket(DocumentationType.SWAGGER_2).groupName(<span class="string">"A"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Docket <span class="title">docket2</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span>  <span class="keyword">new</span> Docket(DocumentationType.SWAGGER_2).groupName(<span class="string">"B"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Docket <span class="title">docket3</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span>  <span class="keyword">new</span> Docket(DocumentationType.SWAGGER_2).groupName(<span class="string">"C"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Docket <span class="title">docket</span><span class="params">()</span></span>&#123; <span class="comment">////Environment environment</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        Profiles profile=Profiles.of("dev");</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        Boolean  flag=environment.acceptsProfiles(profile);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        System.out.println(flag);</span></span><br><span class="line">        <span class="keyword">return</span>  <span class="keyword">new</span> Docket(DocumentationType.SWAGGER_2)</span><br><span class="line">                .groupName(<span class="string">"A的swagger"</span>) <span class="comment">//分组  如果要多组,就复制这个方法docket();</span></span><br><span class="line">                <span class="comment">//是否开启swagger</span></span><br><span class="line">                .enable(<span class="keyword">true</span>)</span><br><span class="line">                .apiInfo(apiInfo())</span><br><span class="line">                .select()</span><br><span class="line">                <span class="comment">//RequestHandlerSelectors, 配置要扫描的接口方式</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">//basePackage 指定包下扫描</span></span><br><span class="line">                <span class="comment">//扫描全部 any()</span></span><br><span class="line">                <span class="comment">// 都不扫描none()</span></span><br><span class="line">                <span class="comment">//扫描类上的注解 withClassAnnotation()</span></span><br><span class="line">                <span class="comment">//扫描类方法的注解 withMethodAnnotation()</span></span><br><span class="line">                .apis(RequestHandlerSelectors.withMethodAnnotation(PostMapping<span class="class">.<span class="keyword">class</span>))</span></span><br><span class="line"><span class="class">                .<span class="title">build</span>()</span></span><br><span class="line"><span class="class">                </span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Contact contact=<span class="keyword">new</span> Contact(<span class="string">"A"</span>,<span class="string">"https://www.csde.vip/"</span>,<span class="string">"1790735465@qq.com"</span>);</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ApiInfo <span class="title">apiInfo</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span>  <span class="keyword">new</span> ApiInfo(</span><br><span class="line">                <span class="string">"A的swagger信息"</span>,</span><br><span class="line">                <span class="string">"A用户Api文档"</span>,</span><br><span class="line">                <span class="string">"1.1"</span>,</span><br><span class="line">                <span class="string">"urn:tos"</span>   ,</span><br><span class="line">                contact,</span><br><span class="line">                <span class="string">"Apache 2.0"</span>,</span><br><span class="line">                <span class="string">"http://www.apache.org/licenses/LICENSE-2.0"</span>,</span><br><span class="line">                <span class="keyword">new</span> ArrayList&lt;VendorExtension&gt;());</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/1790735465/butterfly_image/img/20200612100608.png" alt></p><h1 id="常用注解"><a href="#常用注解" class="headerlink" title="常用注解"></a>常用注解</h1><p>创建实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ApiModel</span>(<span class="string">"用户实体类"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(<span class="string">"用户名"</span>)</span><br><span class="line">    <span class="keyword">public</span> String username;</span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(<span class="string">"用户密码"</span>)</span><br><span class="line">    <span class="keyword">public</span> String password;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/1790735465/butterfly_image/img/20200612101957.png" alt></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ApiOperation</span>(<span class="string">"用户实体类Controller"</span>)</span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/log"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> User  <span class="title">log</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> User();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/1790735465/butterfly_image/img/20200612102456.png" alt></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping</span>(<span class="string">"/Hello1"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">Hello1</span><span class="params">(@RequestParam @ApiParam(<span class="string">"用户名"</span>)</span> String a)</span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">       System.out.println(a);</span><br><span class="line">       <span class="keyword">return</span> <span class="string">"Hello"</span>+a;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/1790735465/butterfly_image/img/20200612102705.png" alt></p><h1 id="在线测试Api接口"><a href="#在线测试Api接口" class="headerlink" title="在线测试Api接口"></a>在线测试Api接口</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ApiOperation</span>(<span class="string">"用户登录控制器"</span>)</span><br><span class="line"><span class="meta">@PostMapping</span>(<span class="string">"/log"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String  <span class="title">log</span><span class="params">(@RequestParam @ApiParam(<span class="string">"用户名"</span>)</span> String username,@RequestParam @<span class="title">ApiParam</span><span class="params">(<span class="string">"用户密码"</span>)</span> String password)</span>&#123;</span><br><span class="line">    String start=<span class="string">""</span>;</span><br><span class="line">    <span class="keyword">if</span>(username.equals(<span class="string">"123"</span>)&amp;&amp;password.equals(<span class="string">"123"</span>))&#123;</span><br><span class="line">        start=<span class="string">"登录成功"</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        start=<span class="string">"用户名或密码错误"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> start;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/1790735465/butterfly_image/img/20200612103718.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/1790735465/butterfly_image/img/20200612103805.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/1790735465/butterfly_image/img/20200612103957.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/1790735465/butterfly_image/img/20200612104040.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> SpringBoot </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot发送qq邮件</title>
      <link href="/posts/1482883414/"/>
      <url>/posts/1482883414/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>创建SpringBoot项目教程地址: <a href="https://www.csde.vip/posts/579658706/">https://www.csde.vip/posts/579658706/</a> </p><h1 id="获取qq邮箱授权码"><a href="#获取qq邮箱授权码" class="headerlink" title="获取qq邮箱授权码"></a>获取qq邮箱授权码</h1><p>打开qq邮箱</p><p><img src="https://cdn.jsdelivr.net/gh/1790735465/butterfly_image/img/20200611141504.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/1790735465/butterfly_image/img/20200611142408.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/1790735465/butterfly_image/img/20200611142621.png" alt></p><h1 id="引入por依赖"><a href="#引入por依赖" class="headerlink" title="引入por依赖"></a>引入por依赖</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 邮箱依赖 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-mail<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="application配置"><a href="#application配置" class="headerlink" title="application配置"></a>application配置</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#配置邮件消息</span><br><span class="line">spring.mail.host=smtp.qq.com</span><br><span class="line">#发送邮件者信箱</span><br><span class="line">spring.mail.username=xxxxxx@qq.com</span><br><span class="line">#PO3/SMTP服务时邮箱的授权码</span><br><span class="line">spring.mail.password=xxxxxxxxxxxxx</span><br><span class="line">spring.mail.default-encoding=UTF-8</span><br><span class="line">spring.mail.port=465</span><br><span class="line">spring.mail.properties.mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory</span><br><span class="line">spring.mail.properties.mail.debug=true</span><br></pre></td></tr></table></figure><h1 id="创建Controller"><a href="#创建Controller" class="headerlink" title="创建Controller"></a>创建Controller</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EmailController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    JavaMailSender mailSender;<span class="comment">//注入QQ发送邮件的bean</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/qqEmail"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">qqEmail</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            MimeMessage mimeMessage = <span class="keyword">this</span>.mailSender.createMimeMessage();</span><br><span class="line">            MimeMessageHelper message = <span class="keyword">new</span> MimeMessageHelper(mimeMessage);</span><br><span class="line">            message.setFrom(<span class="string">"xxxxxxxxx@qq.com"</span>);<span class="comment">//设置发件qq邮箱</span></span><br><span class="line">            String qq=<span class="string">"xxxxxxxxx@qq.com"</span>;<span class="comment">//设定义收件人的qq邮箱,也可以从前端传过来</span></span><br><span class="line">            message.setTo(qq);<span class="comment">//设置收件人</span></span><br><span class="line">            message.setSubject(<span class="string">"验证码"</span>);<span class="comment">//设置标题  可以从前端传过来</span></span><br><span class="line">            <span class="comment">//邮件内容也可以从前端传过来</span></span><br><span class="line">            message.setText(<span class="string">"尊敬的用户,您好:\n"</span> +</span><br><span class="line">                    <span class="string">"\n"</span> +</span><br><span class="line">                    <span class="string">"本次请求的邮件验证码为:"</span>+RandomUtil.generateRandomChar(<span class="number">6</span>)+<span class="string">",本验证码5分钟内有效，请及时输入。（请勿泄露此验证码）\n"</span> +</span><br><span class="line">                    <span class="string">"\n"</span> +</span><br><span class="line">                    <span class="string">"如非本人操作，请忽略该邮件。\n"</span> +</span><br><span class="line">                    <span class="string">"(这是一封自动发送的邮件，请不要直接回复）"</span>,<span class="keyword">false</span>);  <span class="comment">//第二个参数true表示使用HTML语言来编写邮件</span></span><br><span class="line"><span class="comment">//            FileSystemResource file = new FileSystemResource(</span></span><br><span class="line"><span class="comment">//            File file = new File("图片路径");</span></span><br><span class="line"><span class="comment">//            helper.addAttachment("图片.jpg", file);//添加带附件的邮件</span></span><br><span class="line"><span class="comment">//            helper.addInline("picture",file);//添加带静态资源的邮件</span></span><br><span class="line">            <span class="keyword">this</span>.mailSender.send(mimeMessage);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"发送成功"</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception ex) &#123;</span><br><span class="line">            ex.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"发送成功"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="封装验证码随机类-每次发送邮件的验证码随机"><a href="#封装验证码随机类-每次发送邮件的验证码随机" class="headerlink" title="封装验证码随机类,每次发送邮件的验证码随机"></a>封装验证码随机类,每次发送邮件的验证码随机</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RandomUtil</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">generateRandomChar</span><span class="params">(Integer len)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 生成字母A-Z,a-z 之间的随机字符</span></span><br><span class="line"></span><br><span class="line">        StringBuffer sb = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        <span class="keyword">for</span> (Integer i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> intRand = (<span class="keyword">int</span>) (Math.random() * <span class="number">52</span>);</span><br><span class="line">            <span class="keyword">char</span> base = (intRand &lt; <span class="number">26</span>) ? <span class="string">'A'</span> : <span class="string">'a'</span>;</span><br><span class="line">            <span class="keyword">char</span> c = (<span class="keyword">char</span>) (base + intRand % <span class="number">26</span>);</span><br><span class="line">            sb.append(c);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sb.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">generateRandomCharAndNumber</span><span class="params">(Integer len)</span> </span>&#123;</span><br><span class="line">        StringBuffer sb = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        <span class="keyword">for</span> (Integer i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> intRand = (<span class="keyword">int</span>) (Math.random() * <span class="number">52</span>);</span><br><span class="line">            <span class="keyword">int</span> numValue = (<span class="keyword">int</span>) (Math.random() * <span class="number">10</span>);</span><br><span class="line">            <span class="keyword">char</span> base = (intRand &lt; <span class="number">26</span>) ? <span class="string">'A'</span> : <span class="string">'a'</span>;</span><br><span class="line">            <span class="keyword">char</span> c = (<span class="keyword">char</span>) (base + intRand % <span class="number">26</span>);</span><br><span class="line">            <span class="keyword">if</span>(numValue%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line">                sb.append(c);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                sb.append(numValue);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sb.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getCharAndNumr</span><span class="params">(Integer length)</span> </span>&#123;</span><br><span class="line">        StringBuffer sb = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        Random random = <span class="keyword">new</span> Random();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; length; i++) &#123;</span><br><span class="line">            String charOrNum = random.nextInt(<span class="number">2</span>) % <span class="number">2</span> == <span class="number">0</span> ? <span class="string">"char"</span> : <span class="string">"num"</span>; <span class="comment">// 输出字母还是数字</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="string">"char"</span>.equalsIgnoreCase(charOrNum))&#123;<span class="comment">// 字符串</span></span><br><span class="line">                <span class="keyword">int</span> choice = random.nextInt(<span class="number">2</span>) % <span class="number">2</span> == <span class="number">0</span> ? <span class="number">65</span> : <span class="number">97</span>; <span class="comment">// 取得大写字母还是小写字母</span></span><br><span class="line">                sb.append((<span class="keyword">char</span>) (choice + random.nextInt(<span class="number">26</span>)));</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"num"</span>.equalsIgnoreCase(charOrNum))&#123;<span class="comment">// 数字</span></span><br><span class="line">                sb.append(String.valueOf(random.nextInt(<span class="number">10</span>)));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sb.toString();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//System.out.println(generateRandomChar(100));</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">            System.out.println(generateRandomCharAndNumber(<span class="number">20</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> SpringBoot </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>若依前后端分离部署linux服务器</title>
      <link href="/posts/426937047/"/>
      <url>/posts/426937047/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="环境部署"><a href="#环境部署" class="headerlink" title="环境部署"></a>环境部署</h1><h2 id="jdk"><a href="#jdk" class="headerlink" title="jdk"></a>jdk</h2><p>我的版本1.8</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">JDK &gt;&#x3D; 1.8 (推荐1.8版本)</span><br></pre></td></tr></table></figure><p>安装jdk地址: <a href="https://blog.csdn.net/weixin_45736927/article/details/103498715" target="_blank" rel="noopener">https://blog.csdn.net/weixin_45736927/article/details/103498715</a> </p><h2 id="mysql"><a href="#mysql" class="headerlink" title="mysql"></a>mysql</h2><p>我的版本 5.7</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Mysql &gt;&#x3D; 5.5.0 (推荐5.7版本)</span><br></pre></td></tr></table></figure><p><font color="red">安装之前必选保证mysql彻底清除</font></p><p>彻底删除mysql地址: <a href="https://www.cnblogs.com/nicknailo/articles/8563456.html" target="_blank" rel="noopener">https://www.cnblogs.com/nicknailo/articles/8563456.html</a> </p><p>安装mysql地址: <a href="https://www.jianshu.com/p/7b8c4dea6829" target="_blank" rel="noopener">https://www.jianshu.com/p/7b8c4dea6829</a> </p><p>安装成功之后,通过本地SQLyog连接linux服务器数据库(服务器需要开启3306端口),</p><p>把数据库导入linux服务器,<font color="red">注意!!!linux区分大小写</font></p><p><img src="https://cdn.jsdelivr.net/gh/1790735465/butterfly_image/img/20200608193427.png" alt></p><h2 id="redis"><a href="#redis" class="headerlink" title="redis"></a>redis</h2><p>我的版本6.0.4</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Redis &gt;&#x3D; 3.0</span><br></pre></td></tr></table></figure><p>安装redis地址: <a href="https://redis.io/download" target="_blank" rel="noopener">https://redis.io/download</a> </p><h2 id="nginx"><a href="#nginx" class="headerlink" title="nginx"></a>nginx</h2><p>我的版本1.8.0</p><p>安装nginx地址: <a href="https://www.runoob.com/linux/nginx-install-setup.html" target="_blank" rel="noopener">https://www.runoob.com/linux/nginx-install-setup.html</a> </p><p><strong>无版本要求</strong></p><h3 id="nginx配置文件修改"><a href="#nginx配置文件修改" class="headerlink" title="nginx配置文件修改"></a>nginx配置文件修改</h3><p><img src="https://cdn.jsdelivr.net/gh/1790735465/butterfly_image/img/20200608194403.png" alt></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">location</span> /prod-api/&#123;</span><br><span class="line"><span class="attribute">proxy_set_header</span> Host <span class="variable">$http_host</span>;</span><br><span class="line"><span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line"><span class="attribute">proxy_set_header</span> REMOTE-HOST <span class="variable">$remote_addr</span>;</span><br><span class="line"><span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line"><span class="attribute">proxy_pass</span> http://localhost:8080/; <span class="comment">#改成自己的</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="后端部署"><a href="#后端部署" class="headerlink" title="后端部署"></a>后端部署</h1><p> <code>bin/package.bat</code> 在项目的目录下执行<br>然后会在项目下生成 <code>target</code>文件夹包含 <code>war</code> 或<code>jar</code> （多模块生成在ruoyi-admin） <font color="red">本次采用jar包部署</font></p><p>1、jar部署方式<br>使用命令行执行：<code>java –jar ruoyi.jar</code> 或者执行脚本：<code>bin/run.bat</code></p><h1 id="前端部署"><a href="#前端部署" class="headerlink" title="前端部署"></a>前端部署</h1><p>打包之前需要修改vue.config.js的配置文件</p><p><img src="https://cdn.jsdelivr.net/gh/1790735465/butterfly_image/img/20200611135720.png" alt></p><p> 当项目开发完毕，只需要运行一行命令就可以打包你的应用 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 打包正式环境</span><br><span class="line">npm run build:prod</span><br><span class="line"></span><br><span class="line"># 打包预发布环境</span><br><span class="line">npm run build:stage</span><br></pre></td></tr></table></figure><p> 构建打包成功之后，会在根目录生成 <code>dist</code> 文件夹，里面就是构建打包好的文件，通常是 <code>***.js</code> 、<code>***.css</code>、<code>index.html</code> 等静态文件。 </p><p> 通常情况下 <code>dist</code> 文件夹的静态文件发布到你的 nginx 或者静态服务器即可，其中的 <code>index.html</code> 是后台服务的入口页面。 </p><h1 id="jar包和dist文件上传linux服务器"><a href="#jar包和dist文件上传linux服务器" class="headerlink" title="jar包和dist文件上传linux服务器"></a>jar包和dist文件上传linux服务器</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ruoyi]# cd &#x2F; # 到根目录</span><br><span class="line">[root@localhost &#x2F;]# mkdir ruoyi&#x2F; 创建文件夹</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/1790735465/butterfly_image/img/20200608195320.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/1790735465/butterfly_image/img/20200608195450.png" alt></p><h1 id="运行项目"><a href="#运行项目" class="headerlink" title="运行项目"></a>运行项目</h1><h2 id="后台运行"><a href="#后台运行" class="headerlink" title="后台运行"></a>后台运行</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ruoyi]# cd / #进入根目录</span><br><span class="line">[root@localhost /]# cd ruoyi/ #进入刚刚上传项目的文件夹</span><br><span class="line">[root@localhost ruoyi]# ll    #查看文件的内容</span><br><span class="line">总用量 <span class="number">67120</span></span><br><span class="line">drwxr-xr-x  <span class="number">3</span> root root     <span class="number">4096</span> <span class="number">4</span>月   <span class="number">7</span> <span class="number">12</span>:<span class="number">41</span> dist</span><br><span class="line">-rw-r--r--. <span class="number">1</span> root root <span class="number">68702564</span> <span class="number">4</span>月   <span class="number">6</span> <span class="number">01</span>:<span class="number">24</span> ruoyi.jar</span><br><span class="line">-rw-r--r--  <span class="number">1</span> root root    <span class="number">17494</span> <span class="number">4</span>月   <span class="number">7</span> <span class="number">10</span>:<span class="number">56</span> ruoyi_log.out</span><br><span class="line">[root@localhost ruoyi]# java -jar ruoyi.jar #运行jar包</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/1790735465/butterfly_image/img/20200608200011.png" alt></p><p>出现这个说明后端启动成功;</p><h2 id="redis启动"><a href="#redis启动" class="headerlink" title="redis启动"></a>redis启动</h2><p>上面安装地址,有启动教程</p><p><img src="https://cdn.jsdelivr.net/gh/1790735465/butterfly_image/img/20200608200158.png" alt></p><p>出现这个说明redis启动成功;</p><h2 id="前端启动"><a href="#前端启动" class="headerlink" title="前端启动"></a>前端启动</h2><p>把nginx配置文件配置完成,前端启动,其实就是把nginx启动</p><p><font color="red">注意!!!每次更改配置文件,需要重新加载配置文件信息,并重启nginx</font></p><p>访问项目</p><p><img src="https://cdn.jsdelivr.net/gh/1790735465/butterfly_image/img/20200608200520.png" alt></p><p> <img src="file:///C:%5CUsers%5Cthinkpad%5CAppData%5CRoaming%5CTencent%5CUsers%5C1790735465%5CQQ%5CWinTemp%5CRichOle%5C60QO~9Q%60GASXN%5DA$8W%7B8QIU.png" alt="img"> </p>]]></content>
      
      
      <categories>
          
          <category> Linux操作系统 </category>
          
          <category> centos6.7 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 项目部署 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>批量删除本地未下载的jar包</title>
      <link href="/posts/1888491700/"/>
      <url>/posts/1888491700/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> REPOSITORY_PATH=本地Maven仓库路径</span><br><span class="line"><span class="comment">rem 正在搜索...</span></span><br><span class="line"><span class="keyword">for</span> /f "delims=" <span class="variable">%%i</span> <span class="keyword">in</span> ('<span class="built_in">dir</span> /b /s "<span class="variable">%REPOSITORY_PATH%</span>\*lastUpdated*"') <span class="keyword">do</span> (</span><br><span class="line">    <span class="built_in">del</span> /s /q <span class="variable">%%i</span></span><br><span class="line">)</span><br><span class="line"><span class="comment">rem 搜索完毕</span></span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure><p>新建一个文件夹,后缀名为bat文件,把上面的代码复制上去,点击运行</p>]]></content>
      
      
      <categories>
          
          <category> Maven </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>idea创建springboot项目</title>
      <link href="/posts/579658706/"/>
      <url>/posts/579658706/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="新建项目"><a href="#新建项目" class="headerlink" title="新建项目"></a>新建项目</h1><p><img src="https://cdn.jsdelivr.net/gh/1790735465/butterfly_image/img/20200603092934.png" alt></p><h1 id="选择springboot下载地址"><a href="#选择springboot下载地址" class="headerlink" title="选择springboot下载地址"></a>选择springboot下载地址</h1><p><img src="https://cdn.jsdelivr.net/gh/1790735465/butterfly_image/img/20200603093126.png" alt></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">阿里云地址&gt;&gt;&gt; https:<span class="comment">//start.aliyun.com/</span></span><br></pre></td></tr></table></figure><p>点击Next下一步</p><h1 id="项目命名"><a href="#项目命名" class="headerlink" title="项目命名"></a>项目命名</h1><p><img src="https://cdn.jsdelivr.net/gh/1790735465/butterfly_image/img/20200603093838.png" alt></p><h1 id="选择项目所需要的依赖"><a href="#选择项目所需要的依赖" class="headerlink" title="选择项目所需要的依赖"></a>选择项目所需要的依赖</h1><p><img src="https://cdn.jsdelivr.net/gh/1790735465/butterfly_image/img/20200603094206.png" alt></p><h1 id="确认项目名字"><a href="#确认项目名字" class="headerlink" title="确认项目名字"></a>确认项目名字</h1><p><img src="https://cdn.jsdelivr.net/gh/1790735465/butterfly_image/img/20200603094337.png" alt></p><p>第一次创建需要下载springboot的依赖,需要等待一会,</p><h1 id="创建成功"><a href="#创建成功" class="headerlink" title="创建成功"></a>创建成功</h1><p><img src="/posts/579658706/a.png" alt></p><h1 id="输出spirngboot的Helloworld"><a href="#输出spirngboot的Helloworld" class="headerlink" title="输出spirngboot的Helloworld"></a>输出spirngboot的Helloworld</h1><p>在com.csde的目录下创建一个controller文件夹</p><p>并在controller文件夹创建一个HelloWorld控制器</p><p>目录如下</p><p><img src="https://cdn.jsdelivr.net/gh/1790735465/butterfly_image/img/20200603095228.png" alt></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span> </span>&#123;</span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">hello</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"HelloWorld"</span>);</span><br><span class="line">        <span class="keyword">return</span>  <span class="string">"HelloWorld"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>启动spring boot项目</p><p>在网页上访问: <a href="http://localhost:8080/" target="_blank" rel="noopener">http://localhost:8080/</a> </p><p><img src="https://cdn.jsdelivr.net/gh/1790735465/butterfly_image/img/20200603095629.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> SpringBoot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> idea </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo | 博客优化</title>
      <link href="/posts/2199413063/"/>
      <url>/posts/2199413063/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="Butterfly主题博客文章链接优化之abbrlink"><a href="#Butterfly主题博客文章链接优化之abbrlink" class="headerlink" title="Butterfly主题博客文章链接优化之abbrlink"></a>Butterfly主题博客文章链接优化之abbrlink</h1><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>如果自己的文章标题为中文的话,就会在网站上面出现一些中文让人很不舒服,</p><p><img src="https://cdn.jsdelivr.net/gh/1790735465/butterfly_image/img/20200531193114.png" alt></p><p>下面的文章链接也会出现一堆乱码</p><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><h3 id="安装hexo-abbrlink插件"><a href="#安装hexo-abbrlink插件" class="headerlink" title="安装hexo-abbrlink插件"></a>安装hexo-abbrlink插件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure><h3 id="然后在站点配置文件加入"><a href="#然后在站点配置文件加入" class="headerlink" title="然后在站点配置文件加入"></a>然后在站点配置文件加入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">permalink: posts&#x2F;:abbrlink&#x2F;</span><br><span class="line">abbrlink:</span><br><span class="line">  alg: crc32 #support crc16(default) and crc32</span><br><span class="line">  rep: dec   #support dec(default) and hex</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/1790735465/butterfly_image/img/20200531193622.png" alt></p><p>解决成功,中文标题不出现，下面链接也不会出现乱码</p><h1 id="Butterfly主题哔哩哔哩番剧页面插件"><a href="#Butterfly主题哔哩哔哩番剧页面插件" class="headerlink" title="Butterfly主题哔哩哔哩番剧页面插件"></a>Butterfly主题哔哩哔哩番剧页面插件</h1><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><a href="/bangumis/">实例效果</a></p><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-bilibili-bangumi --save</span><br></pre></td></tr></table></figure><h2 id="更新插件"><a href="#更新插件" class="headerlink" title="更新插件"></a>更新插件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-bilibili-bangumi --update --save</span><br></pre></td></tr></table></figure><h2 id="站点配置文件信息修改"><a href="#站点配置文件信息修改" class="headerlink" title="站点配置文件信息修改"></a>站点配置文件信息修改</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">bangumi:</span><br><span class="line">  enable: true </span><br><span class="line">  path: </span><br><span class="line">  vmid: </span><br><span class="line">  title: &#39;追番列表&#39;</span><br><span class="line">  quote: &#39;生命不息，追番不止！&#39;</span><br><span class="line">  show: 1</span><br><span class="line">  loading:</span><br></pre></td></tr></table></figure><ul><li><strong>enable</strong>: 是否启用</li><li><strong>path</strong>: 番剧页面路径，默认 <code>bangumis/index.html</code></li><li><strong>vmid</strong>: 哔哩哔哩番剧页面的 <code>vmid(uid)</code>,   <a href="https://blog.hclonely.com/go/?to=aHR0cHM6Ly9zcGFjZS5iaWxpYmlsaS5jb20v" target="_blank" rel="noopener">https://space.bilibili.com/</a>  通过这个链接获取</li><li><strong>title</strong>: 该页面的标题</li><li><strong>quote</strong>: 写在页面开头的一段话，支持 html 语法</li><li><strong>show</strong>: 初始显示页面：<code>0: 想看</code> , <code>1: 在看</code> , <code>2: 看过</code>，默认为 <code>1</code></li><li><strong>loading</strong>: 图片加载完成前的 loading 图片</li></ul><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="创建-bangumis-文件夹"><a href="#创建-bangumis-文件夹" class="headerlink" title="创建 bangumis 文件夹"></a>创建 bangumis 文件夹</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page bangumis</span><br></pre></td></tr></table></figure><p> 找到<code>source/bangumis/index.md</code>这个文件 </p><p>文件内容</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 番剧</span><br><span class="line">date: 2018-01-05 00:00:00</span><br><span class="line">type: "bangumis"</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h3 id="如果哔哩哔哩上面的番剧进行了更新，需要用"><a href="#如果哔哩哔哩上面的番剧进行了更新，需要用" class="headerlink" title="如果哔哩哔哩上面的番剧进行了更新，需要用"></a>如果哔哩哔哩上面的番剧进行了更新，需要用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo bangumi -u</span><br></pre></td></tr></table></figure><p>指令进行番剧的更新</p><h3 id="删除数据命令"><a href="#删除数据命令" class="headerlink" title="删除数据命令"></a>删除数据命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo bangumi -d</span><br></pre></td></tr></table></figure><h1 id="Butterfly主题开启Aplayer和“音乐”页面"><a href="#Butterfly主题开启Aplayer和“音乐”页面" class="headerlink" title="Butterfly主题开启Aplayer和“音乐”页面"></a>Butterfly主题开启Aplayer和“音乐”页面</h1><h2 id="安装插件-1"><a href="#安装插件-1" class="headerlink" title="安装插件"></a>安装插件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install aplayer</span><br><span class="line"></span><br><span class="line">npm install --save hexo-tag-aplayer</span><br></pre></td></tr></table></figure><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><p>在站点 _config.yml在最后添加以下代码 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">aplayer: </span><br><span class="line">  script_dir: js                      # Public 目录下脚本目录路径，默认: &#39;assets&#x2F;js&#39;</span><br><span class="line">  style_dir: css                         # Public 目录下样式目录路径，默认: &#39;assets&#x2F;css&#39;</span><br><span class="line">  #cdn: http:&#x2F;&#x2F;xxx&#x2F;aplayer.min.js                # 引用 APlayer.js 外部 CDN 地址 (默认不开启)</span><br><span class="line">  #style_cdn: http:&#x2F;&#x2F;xxx&#x2F;aplayer.min.css         # 引用 APlayer.css 外部 CDN 地址 (默认不开启)</span><br><span class="line">  meting: true                                  # MetingJS 支持</span><br><span class="line">  #meting_api: http:&#x2F;&#x2F;xxx&#x2F;api.php                # 自定义 Meting API 地址</span><br><span class="line">  #meting_cdn: http:&#x2F;&#x2F;xxx&#x2F;Meing.min.js           # 引用 Meting.js 外部 CDN 地址 (默认不开启)</span><br><span class="line">  asset_inject: true                            # 自动插入 Aplayer.js 与 Meting.js 资源脚本, 默认开启</span><br><span class="line">  #externalLink: http:&#x2F;&#x2F;xxx&#x2F;aplayer.min.js       # 老版本参数，功能与参数 cdn 相同meting: true</span><br></pre></td></tr></table></figure><p>并开启站点 _config.ym配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">post_asset_folder: true</span><br></pre></td></tr></table></figure><h2 id="格式调整"><a href="#格式调整" class="headerlink" title="格式调整"></a>格式调整</h2><p>在博客根目录\source\music\index.md使用以下格式 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 音乐</span><br><span class="line">date: 2020-05-28 00:00:00</span><br><span class="line">cover: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;radium-bit&#x2F;res@latest&#x2F;Music.jpg</span><br><span class="line">type: &quot;music&quot;</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"> &lt;font color&#x3D;#0c74d6 size&#x3D;3 face&#x3D;&quot;黑体&quot;&gt;**我的歌单**&lt;&#x2F;font&gt; </span><br><span class="line"></span><br><span class="line">&#123;% meting &quot;4912715268&quot; &quot;netease&quot; &quot;playlist&quot; %&#125;</span><br></pre></td></tr></table></figure><p> meting   是歌单ID， </p><p> netease  为网易云音乐 </p><p> 歌单ID提取方法是以链接分享某个歌单,例如  <a href="https://music.163.com/#/playlist?id=4912715268" target="_blank" rel="noopener">https://music.163.com/#/playlist?id=4912715268</a> </p><h1 id="Butterfly主题进行百度统计"><a href="#Butterfly主题进行百度统计" class="headerlink" title="Butterfly主题进行百度统计"></a>Butterfly主题进行百度统计</h1><h2 id="效果-1"><a href="#效果-1" class="headerlink" title="效果"></a>效果</h2><p><img src="https://cdn.jsdelivr.net/gh/1790735465/butterfly_image/img/20200601104446.png" alt></p><h2 id="登录百度账号"><a href="#登录百度账号" class="headerlink" title="登录百度账号"></a>登录百度账号</h2><h3><a href="https://tongji.baidu.com/web/welcome/login " target="_blank" rel="noopener">点这个进入百度统计</a></h3><h2 id="复制百度代码"><a href="#复制百度代码" class="headerlink" title="复制百度代码"></a>复制百度代码</h2><p><img src="https://cdn.jsdelivr.net/gh/1790735465/butterfly_image/img/20200601104313.png" alt></p><h2 id="站点配置文件"><a href="#站点配置文件" class="headerlink" title="站点配置文件"></a>站点配置文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">baidu_analytics: 上面图片打码的代码</span><br></pre></td></tr></table></figure><h1 id="Valine博主标签设置"><a href="#Valine博主标签设置" class="headerlink" title="Valine博主标签设置"></a>Valine博主标签设置</h1><h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><p><img src="https://cdn.jsdelivr.net/gh/1790735465/butterfly_image/img/20200601110755.png" alt></p><h2 id="修改站点配置文件"><a href="#修改站点配置文件" class="headerlink" title="修改站点配置文件"></a>修改站点配置文件</h2><p>在站点配置文件</p><p><img src="https://cdn.jsdelivr.net/gh/1790735465/butterfly_image/img/20200601111229.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;HCLonely&#x2F;Valine@latest&#x2F;dist&#x2F;Valine.min.js</span><br></pre></td></tr></table></figure><p>把valine:注释掉,换成下面的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">valine:</span><br><span class="line">  enable: true # if you want use valine,please set this value is true</span><br><span class="line">  appId:  # leancloud application app id</span><br><span class="line">  appKey:  # leancloud application app key</span><br><span class="line">  master:#博主邮箱 md5加密</span><br><span class="line">      -  d799cdaab02b754cb52617372d860835</span><br><span class="line">  friends:#小伙伴邮箱 md5加密</span><br><span class="line">      -  ce2266d4e91782573b50c29e06a811e4</span><br><span class="line">  notify: false</span><br><span class="line">  verify: false</span><br><span class="line">  pageSize: 10 # comment list page size</span><br><span class="line">  avatar: monsterid # gravatar style https:&#x2F;&#x2F;valine.js.org&#x2F;#&#x2F;avatar</span><br><span class="line">  lang: zh-cn # i18n: zh-cn&#x2F;en</span><br><span class="line">  placeholder: &#39;请不要说脏话哦！&#39; # valine comment input placeholder(like: Please leave your footprints )</span><br><span class="line">  guest_info: 昵称,邮箱,主页 #valine comment header info</span><br><span class="line">  recordIP: true # Record reviewer IP</span><br><span class="line">  serverURLs: # This configuration is suitable for domestic custom domain name users, overseas version will be automatically detected (no need to manually fill in)</span><br><span class="line">  bg: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;HCLonely&#x2F;hclonely.github.io@1.4.7&#x2F;img&#x2F;comment_bg.png # valine background</span><br><span class="line">  count: true # top_img顯示評論數,</span><br><span class="line">  emojiCDN: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;HCLonely&#x2F;valine-face@1.0.1&#x2F;</span><br><span class="line">  enableQQ: true</span><br><span class="line">  requiredFields: nick,mail</span><br><span class="line">  metaPlaceholder:</span><br><span class="line">    nick: 昵称&#x2F;QQ号(必填)</span><br><span class="line">    mail: 邮箱(必填)</span><br><span class="line">    link: 网址(https:&#x2F;&#x2F;)</span><br></pre></td></tr></table></figure><h2 id="修改的文件"><a href="#修改的文件" class="headerlink" title="修改的文件"></a>修改的文件</h2><p>在这个themes\Butterfly\layout\includes\comments\valine.pug目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">- let emojiMaps &#x3D; &#39;&quot;&quot;&#39;</span><br><span class="line">if site.data.valine</span><br><span class="line">  - emojiMaps &#x3D; JSON.stringify(site.data.valine)</span><br><span class="line"></span><br><span class="line">#vcomment.vcomment</span><br><span class="line">script(src&#x3D;url_for(theme.CDN.valine))</span><br><span class="line">script.</span><br><span class="line">  var requestSetting &#x3D; function (from,set) &#123;</span><br><span class="line">    var from &#x3D; from</span><br><span class="line">    var setting &#x3D; set.split(&#39;,&#39;).filter(function(item)&#123;</span><br><span class="line">    return from.indexOf(item) &gt; -1</span><br><span class="line">    &#125;);</span><br><span class="line">    setting &#x3D; setting.length &#x3D;&#x3D; 0 ? from :setting;</span><br><span class="line">    return setting</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  var guestInfo &#x3D; requestSetting([&#39;nick&#39;,&#39;mail&#39;,&#39;link&#39;],&#39;#&#123; theme.valine.guest_info &#125;&#39;)</span><br><span class="line">  var requiredFields &#x3D; requestSetting([&#39;nick&#39;,&#39;mail&#39;,&#39;link&#39;],&#39;#&#123; theme.valine.requiredFields &#125;&#39;)</span><br><span class="line">  let friends &#x3D; &#39;#&#123;theme.valine.friends&#125;&#39;.split(&#39;,&#39;)</span><br><span class="line">  let master &#x3D; &#39;#&#123;theme.valine.master&#125;&#39;.split(&#39;,&#39;)</span><br><span class="line"></span><br><span class="line">  window.valine &#x3D; new Valine(&#123;</span><br><span class="line">    el:&#39;#vcomment&#39;,</span><br><span class="line">    appId: &#39;#&#123;theme.valine.appId&#125;&#39;,</span><br><span class="line">    appKey: &#39;#&#123;theme.valine.appKey&#125;&#39;,</span><br><span class="line">    notify: #&#123;theme.valine.notify&#125;,</span><br><span class="line">    verify: #&#123;theme.valine.verify&#125;,</span><br><span class="line">    placeholder: &#39;#&#123;theme.valine.placeholder&#125;&#39;,</span><br><span class="line">    avatar: &#39;#&#123;theme.valine.avatar&#125;&#39;,</span><br><span class="line">    meta: guestInfo,</span><br><span class="line">    pageSize: &#39;#&#123;theme.valine.pageSize&#125;&#39;,</span><br><span class="line">    lang: &#39;#&#123;theme.valine.lang&#125;&#39;,</span><br><span class="line">    recordIP: #&#123;theme.valine.recordIP&#125;,</span><br><span class="line">    serverURLs: &#39;#&#123;theme.valine.serverURLs&#125;&#39;,</span><br><span class="line">    emojiCDN: &#39;#&#123;theme.valine.emojiCDN&#125;&#39;,</span><br><span class="line">    emojiMaps: !&#123;emojiMaps&#125;,</span><br><span class="line">    enableQQ: #&#123;theme.valine.enableQQ&#125;,</span><br><span class="line">    requiredFields: requiredFields,</span><br><span class="line">    master: master,</span><br><span class="line">    friends: friends,</span><br><span class="line">    metaPlaceholder: !&#123;JSON.stringify(theme.valine.metaPlaceholder)&#125;</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux常用基本指令(基于centos7.4 64位)</title>
      <link href="/posts/1323888949/"/>
      <url>/posts/1323888949/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="查看linux版本"><a href="#查看linux版本" class="headerlink" title="查看linux版本"></a>查看linux版本</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz ~]# cat &#x2F;etc&#x2F;redhat-release</span><br><span class="line">CentOS Linux release 7.4.1708 (Core)</span><br></pre></td></tr></table></figure><h1 id="查看防火墙状态"><a href="#查看防火墙状态" class="headerlink" title="查看防火墙状态"></a>查看防火墙状态</h1><p>  一、防火墙的开启、关闭、重启命令 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systemctl status firewalld  # 查看防火墙状态 active (running)开启  inactive (dead)关闭</span><br><span class="line">systemctl stop firewalld    #关闭防火墙 </span><br><span class="line">systemctl start firewalld   #启动防火墙</span><br><span class="line">firewall-cmd --reload       #重启防火墙</span><br></pre></td></tr></table></figure><p> 二、使用firewall-cmd配置端口 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --state      #查看防火墙状态</span><br><span class="line">firewall-cmd --list-ports #查看开发的端口号</span><br><span class="line">firewall-cmd --zone&#x3D;public --add-port&#x3D;9200&#x2F;tcp --permanent   #开启防火墙端口</span><br><span class="line">firewall-cmd --zone&#x3D;public --remove-port&#x3D;9200&#x2F;tcp --permanent #关闭防火墙</span><br></pre></td></tr></table></figure><p><font color="red" size="5">开启和关闭端口号,需要重启防火墙才可以生效,如果在阿里云服务器需要开通安全组</font></p><h1 id="目录管理"><a href="#目录管理" class="headerlink" title="目录管理"></a>目录管理</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line">1、ls: 列出目录</span><br><span class="line">    选项与参数：</span><br><span class="line">    -a ：全部的文件，连同隐藏文件( 开头为 . 的文件) 一起列出来(常用)</span><br><span class="line">    -l ：长数据串列出，包含文件的属性与权限等等数据；(常用)</span><br><span class="line"></span><br><span class="line">2、cd：切换目录</span><br><span class="line">3、pwd：显示目前的目录</span><br><span class="line"></span><br><span class="line">4、mkdir：创建一个新的目录</span><br><span class="line">选项与参数：</span><br><span class="line">-m ：配置文件的权限喔！直接配置，不需要看默认权限 (umask) 的脸色～</span><br><span class="line">#赋予最高权限 可读可写可执行</span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz xgp]# mkdir -m 777 Object</span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz xgp]# ls -l</span><br><span class="line">total 16</span><br><span class="line">drwxr-xr-x 3 root root 4096 May 27 15:20 a</span><br><span class="line">drwxr-xr-x 9 root root 4096 May 27 08:58 apache-tomcat-9.0.35</span><br><span class="line">drwxrwxr-x 7  500  500 4096 Oct  5  2019 jdk1.8.0_231</span><br><span class="line">drwxrwxrwx 2 root root 4096 May 27 15:23 Object #最高权限可读可写可执行</span><br><span class="line"></span><br><span class="line">-p ：帮助你直接将所需要的目录(包含上一级目录)递归创建起来！</span><br><span class="line">#直接递归创建的会报错</span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz xgp]# mkdir a&#x2F;b&#x2F;c</span><br><span class="line">mkdir: cannot create directory ‘a&#x2F;b&#x2F;c’: No such file or directory</span><br><span class="line">#加上-p参数会进行递归创建</span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz xgp]# mkdir -p a&#x2F;b&#x2F;c</span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz xgp]# ls</span><br><span class="line">a  apache-tomcat-9.0.35  jdk1.8.0_231</span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz xgp]# cd a</span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz a]# ls</span><br><span class="line">b</span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz a]# cd b</span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz b]# ls</span><br><span class="line">c</span><br><span class="line"></span><br><span class="line">5、rmdir：删除一个空的目录</span><br><span class="line">#可以直接删除</span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz xgp]# rmdir Object&#x2F;</span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz xgp]# ls</span><br><span class="line">a  apache-tomcat-9.0.35  jdk1.8.0_231</span><br><span class="line">选项与参数：</span><br><span class="line">-p ：连同上一级『空的』目录也一起删除</span><br><span class="line">#因为a下面有b下面有c,所以要递归删除</span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz xgp]# rmdir a</span><br><span class="line">rmdir: failed to remove ‘a’: Directory not empt</span><br><span class="line">#加上-p参数进行递归删除,删除成功</span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz xgp]# rmdir -p a&#x2F;b&#x2F;c</span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz xgp]# ls</span><br><span class="line">apache-tomcat-9.0.35  jdk1.8.0_231</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">6、cp: 复制文件或目录</span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz xgp]# mkdir a #创建a文件夹</span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz xgp]# ls</span><br><span class="line">a  apache-tomcat-9.0.35  jdk1.8.0_231  </span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz xgp]# touch a.txt #创建b文件</span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz xgp]# ls</span><br><span class="line">a  apache-tomcat-9.0.35  a.txt  jdk1.8.0_231</span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz xgp]# cp a.txt a #把a.txt文件移动到a文件夹</span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz xgp]# ls</span><br><span class="line">a  apache-tomcat-9.0.35  a.txt  jdk1.8.0_231</span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz xgp]# cd a</span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz a]# ls  </span><br><span class="line">a.txt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">7、rm: 移除文件或目录</span><br><span class="line">选项与参数：</span><br><span class="line"></span><br><span class="line">-f ：就是 force 的意思，忽略不存在的文件，不会出现警告信息；</span><br><span class="line"></span><br><span class="line">-i ：互动模式，在删除前会询问使用者是否动作</span><br><span class="line"></span><br><span class="line">-r ：递归删除啊！最常用在目录的删除了！这是非常危险的选项！！！</span><br><span class="line">#########尽量不要在服务器上使用 rm -rf &#x2F;</span><br><span class="line"></span><br><span class="line">8、mv: 移动文件与目录，或修改文件与目录的名称</span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz xgp]# ls</span><br><span class="line">a  apache-tomcat-9.0.35  b  jdk1.8.0_231</span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz xgp]# cd a</span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz a]# ls #在a的文件夹创建a.txt文件</span><br><span class="line">a.txt</span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz a]# cd ..&#x2F;b  </span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz b]# ls       #在b的文件夹创建b.txt文件</span><br><span class="line">b.txt</span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz xgp]# ls</span><br><span class="line">a  apache-tomcat-9.0.35  b  jdk1.8.0_231</span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz xgp]# mv a&#x2F;a.txt b #把a文件下面的a.txt文件移动到b文件下</span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz xgp]# cd a</span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz a]# ls</span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz a]# cd ..&#x2F;b</span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz b]# ls</span><br><span class="line">a.txt  b.txt  #移动成功</span><br><span class="line"></span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz xgp]# mv a c     #把a文件夹修改为c</span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz xgp]# ls</span><br><span class="line">apache-tomcat-9.0.35  b  c  jdk1.8.0_231       #修改成功</span><br><span class="line">选项与参数：</span><br><span class="line">-f ：force 强制的意思，如果目标文件已经存在，不会询问而直接覆盖；</span><br><span class="line"></span><br><span class="line">-i ：若目标文件 (destination) 已经存在时，就会询问是否覆盖！</span><br><span class="line"></span><br><span class="line">-u ：若目标文件已经存在，且 source 比较新，才会升级 (update)</span><br></pre></td></tr></table></figure><h1 id="基本属性"><a href="#基本属性" class="headerlink" title="基本属性"></a>基本属性</h1><p>Linux系统是一种典型的多用户系统, 不同的用户处于不同的地位，拥有不同的权限 </p><p> 在Linux中我们可以使用<strong>ll</strong>或者<strong>ls –l</strong>命令来显示一个文件的属性以及文件所属的用户和组，如： </p><p><img src="/posts/1323888949/a.png" alt></p><p>图片中, 第一个属性用”d”表示。”d”在Linux中代表该文件是一个目录文件。 </p><p> 在Linux中第一个字符代表这个文件是目录、文件或链接文件等等： </p><ul><li>当为[ <strong>d</strong> ]则是目录</li><li>当为[ <strong>-</strong> ]则是文件；</li><li>若是[ <strong>l</strong> ]则表示为链接文档 ( link file )；</li><li>若是[ <strong>b</strong> ]则表示为装置文件里面的可供储存的接口设备 ( 可随机存取装置 )；</li><li>若是[ <strong>c</strong> ]则表示为装置文件里面的串行端口设备，例如键盘、鼠标 ( 一次性读取装置 )。</li></ul><p><img src="/posts/1323888949/b.png" alt></p><p>接下的字符是三个为一组, 且均为『rwx』 的三个参数的组合。 </p><p> 其中，[ r ]代表可读(read)、[ w ]代表可写(write)、[ x ]代表可执行(execute)。 </p><p>​             4                                    2                                     1</p><p> 要注意的是，这三个权限的位置不会改变，如果没有权限，就会出现减号[ - ]而已。 </p><p> 每个文件的属性由左边第一部分的10个字符来确定（如下图）： </p><p><img src="/posts/1323888949/c.png" alt></p><p>从左至右用0-9这些数字来表示。</p><p>第0位确定文件类型，第1-3位确定属主（该文件的所有者）拥有该文件的权限。第4-6位确定属组（所有者的同组用户）拥有该文件的权限，第7-9位确定其他用户拥有该文件的权限。 </p><p>第1、4、7位表示读权限，如果用”r”字符表示，则有读权限，如果用”-“字符表示，则没有读权限；</p><p>第2、5、8位表示写权限，如果用”w”字符表示，则有写权限，如果用”-“字符表示没有写权限；</p><p>第3、6、9位表示可执行权限，如果用”x”字符表示，则有执行权限，如果用”-“字符表示，则没有执行权限。 </p><h2 id="修改文件属性"><a href="#修改文件属性" class="headerlink" title="修改文件属性"></a>修改文件属性</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz xgp]# ls -l </span><br><span class="line">total 12</span><br><span class="line">drwxr-xr-x 2 root root 4096 May 27 19:22 a    # 可以看到属组和其他用户权限不是最高</span><br><span class="line">drwxr-xr-x 9 root root 4096 May 27 08:58 apache-tomcat-9.0.35</span><br><span class="line">drwxrwxr-x 7  500  500 4096 Oct  5  2019 jdk1.8.0_231</span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz xgp]# chmod 777 a #对文件设置最高权限</span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz xgp]# ls -l</span><br><span class="line">total 12</span><br><span class="line">drwxrwxrwx 2 root root 4096 May 27 19:22 a#设置成功,此文件任何人都可以操作</span><br><span class="line">drwxr-xr-x 9 root root 4096 May 27 08:58 apache-tomcat-9.0.35</span><br><span class="line">drwxrwxr-x 7  500  500 4096 Oct  5  2019 jdk1.8.0_231</span><br></pre></td></tr></table></figure><h1 id="文件内容查看"><a href="#文件内容查看" class="headerlink" title="文件内容查看"></a>文件内容查看</h1><p> Linux系统中使用以下命令来查看文件的内容： </p><ul><li><p>cat 由第一行开始显示文件内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz xgp]# cat a.txt </span><br><span class="line">第一行</span><br><span class="line">ljjj</span><br><span class="line">zx</span><br><span class="line">xz</span><br><span class="line">xzc</span><br><span class="line">xz</span><br><span class="line">cxzcxzcxz</span><br><span class="line">c</span><br><span class="line">xzc</span><br><span class="line">xzc</span><br><span class="line">zxc</span><br><span class="line">xzc</span><br><span class="line">xzcxzc</span><br><span class="line">zxc</span><br><span class="line">xcz</span><br><span class="line">cxz</span><br><span class="line">最后一行</span><br></pre></td></tr></table></figure></li><li><p>tac 从最后一行开始显示，可以看出 tac 是 cat 的倒着写！</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz xgp]# tac a.txt </span><br><span class="line">最后一行</span><br><span class="line">cxz</span><br><span class="line">xcz</span><br><span class="line">zxc</span><br><span class="line">xzcxzc</span><br><span class="line">xzc</span><br><span class="line">zxc</span><br><span class="line">xzc</span><br><span class="line">xzc</span><br><span class="line">&#x2F;c</span><br><span class="line">cxzcxzcxz</span><br><span class="line">xz</span><br><span class="line">xzc</span><br><span class="line">xz</span><br><span class="line">zx</span><br><span class="line">ljjj</span><br><span class="line">第一行</span><br></pre></td></tr></table></figure></li><li><p>nl  显示的时候，顺道输出行号！</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz xgp]# nl a.txt </span><br><span class="line">     1第一行</span><br><span class="line">     2ljjj</span><br><span class="line">     3zx</span><br><span class="line">     4xz</span><br><span class="line">     5xzc</span><br><span class="line">     6xz</span><br><span class="line">     7cxzcxzcxz</span><br><span class="line">     8&#x2F;c   </span><br><span class="line">     9xzc</span><br><span class="line">    10xzc</span><br><span class="line">    11zxc </span><br><span class="line">    12xzc</span><br><span class="line">    13xzcxzc</span><br><span class="line">    14zxc </span><br><span class="line">    15xcz</span><br><span class="line">    16cxz</span><br><span class="line">    17最后一行</span><br></pre></td></tr></table></figure></li><li><p>more 一页一页的显示文件内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">空格键 ：代表向下翻一页；</span><br><span class="line">q ：代表立刻离开 more ，不再显示该文件内容</span><br><span class="line"></span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz xgp]# more a.txt </span><br><span class="line">第一行</span><br><span class="line">ljjj</span><br><span class="line">zx</span><br><span class="line">xz</span><br><span class="line">xzc</span><br><span class="line">xz</span><br><span class="line">cxzcxzcxz</span><br><span class="line">&#x2F;c</span><br><span class="line">xzc</span><br><span class="line">xzc</span><br><span class="line">zxc</span><br><span class="line">xzc</span><br><span class="line">xzcxzc</span><br><span class="line">zxc</span><br><span class="line">xcz</span><br><span class="line">cxz</span><br><span class="line">最后一行  </span><br><span class="line">#如果文件内容多的话,可以进行一页一页的翻</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>less 与 more 类似，但是比 more 更好的是，他可以往前翻页！</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">空白键  ：向下翻动一页； </span><br><span class="line">q     ：离开 less 这个程序；</span><br><span class="line">↑↓箭头可以进行翻页</span><br><span class="line"></span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz xgp]# less a.txt </span><br><span class="line">第一行</span><br><span class="line">ljjj</span><br><span class="line">zx</span><br><span class="line">xz</span><br><span class="line">xzc</span><br><span class="line">xz</span><br><span class="line">cxzcxzcxz</span><br><span class="line">&#x2F;c</span><br><span class="line">xzc</span><br><span class="line">xzc</span><br><span class="line">zxc</span><br><span class="line">xzc</span><br><span class="line">xzcxzc</span><br><span class="line">zxc</span><br><span class="line">xcz</span><br><span class="line">cxz</span><br><span class="line">最后一行</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>head 只看头几行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">选项与参数：-n 后面接数字，代表显示几行的意思！</span><br><span class="line"></span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz xgp]# head -n 5 a.txt </span><br><span class="line">第一行</span><br><span class="line">ljjj</span><br><span class="line">zx</span><br><span class="line">2</span><br><span class="line">xz</span><br></pre></td></tr></table></figure></li></ul><ul><li>tail 只看尾巴几行</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-n ：后面接数字，代表显示几行的意思</span><br><span class="line"></span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz xgp]# tail -n 5 a.txt </span><br><span class="line">xzx</span><br><span class="line">zxc</span><br><span class="line">xcz</span><br><span class="line">cxz</span><br><span class="line">最后一行</span><br></pre></td></tr></table></figure><h1 id="拓展：Linux-链接概念"><a href="#拓展：Linux-链接概念" class="headerlink" title="拓展：Linux 链接概念"></a>拓展：Linux 链接概念</h1><p>​     Linux 链接分两种，一种被称为硬链接（Hard Link），另一种被称为符号链接（Symbolic Link）。 </p><p> <strong>硬连接</strong> </p><p>硬连接指通过索引节点来进行连接。在 Linux 的文件系统中，保存在磁盘分区中的文件不管是什么类型都给它分配一个编号，称为索引节点号(Inode Index)。在 Linux 中，多个文件名指向同一索引节点是存在的。比如：A 是 B 的硬链接（A 和 B 都是文件名），则 A 的目录项中的 inode 节点号与 B 的目录项中的 inode 节点号相同，即一个 inode 节点对应两个不同的文件名，两个文件名指向同一个文件，A 和 B 对文件系统来说是完全平等的。删除其中任何一个都不会影响另外一个的访问。</p><p>硬连接的作用是允许一个文件拥有多个有效路径名，这样用户就可以建立硬连接到重要文件，以防止“误删”的功能。其原因如上所述，因为对应该目录的索引节点有一个以上的连接。只删除一个连接并不影响索引节点本身和其它的连接，只有当最后一个连接被删除后，文件的数据块及目录的连接才会被释放。也就是说，文件真正删除的条件是与之相关的所有硬连接文件均被删除。</p><p> <strong>软连接</strong> </p><p> 另外一种连接称之为符号连接（Symbolic Link），也叫软连接。软链接文件有类似于 Windows 的快捷方式。它实际上是一个特殊的文件。在符号连接中，文件实际上是一个文本文件，其中包含的有另一文件的位置信息。比如：A 是 B 的软链接（A 和 B 都是文件名），A 的目录项中的 inode 节点号与 B 的目录项中的 inode 节点号不相同，A 和 B 指向的是两个不同的 inode，继而指向两块不同的数据块。但是 A 的数据块中存放的只是 B 的路径名（可以根据这个找到 B 的目录项）。A 和 B 之间是“主从”关系，如果 B 被删除了，A 仍然存在（因为两个是不同的文件），但指向的是一个无效的链接。 </p><p> <strong>测试：</strong> </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz xgp]# touch a#创建一个测试文件</span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz xgp]# ln a b#创建一个a文件的硬链接文件b</span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz xgp]# ln -s a c#创建一个a文件的软链接文件c</span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz xgp]# ls -li        #-i参数显示文件的inode节点信息</span><br><span class="line">total 8</span><br><span class="line">2099732 -rw-r--r-- 2 root root    0 May 28 08:10 a</span><br><span class="line">2099732 -rw-r--r-- 2 root root    0 May 28 08:10 b</span><br><span class="line">2099733 lrwxrwxrwx 1 root root    1 May 28 08:10 c -&gt; a</span><br></pre></td></tr></table></figure><p>重上面结果看到,硬链接文件b和源文件a索引节点相同,均为2099732, 然而软链接文件的 inode 节点不同。 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz xgp]# vim a#往文件a里面写入I Love You</span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz xgp]# cat a       #查询文件a的内容</span><br><span class="line">I Love You</span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz xgp]# cat b#查询文件b的内容</span><br><span class="line">I Love You</span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz xgp]# cat c#查询文件c的内容</span><br><span class="line">I Love You</span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz xgp]# rm -rf a#删除a文件</span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz xgp]# cat b      #查询文件b的内容</span><br><span class="line">I Love You</span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz xgp]# cat c#查询文件c的内容</span><br><span class="line">cat: c: No such file or directory</span><br></pre></td></tr></table></figure><p> 通过上面的测试可以看出：当删除原始文件 f1 后，硬连接 f2 不受影响，但是符号连接 f1 文件无效； </p><p>依此您可以做一些相关的测试，可以得到以下全部结论：</p><ul><li>删除符号连接f3,对f1,f2无影响；</li><li>删除硬连接f2，对f1,f3也无影响；</li><li>删除原文件f1，对硬连接f2没有影响，导致符号连接f3失效；</li><li>同时删除原文件f1,硬连接f2，整个文件会真正的被删除。</li></ul><h1 id="Vim编辑器"><a href="#Vim编辑器" class="headerlink" title="Vim编辑器"></a>Vim编辑器</h1><p> Vim是从 vi 发展出来的一个文本编辑器。代码补完、编译及错误跳转等方便编程的功能特别丰富，在程序员中被广泛使用。 </p><p>简单的来说， vi 是老式的字处理器，不过功能已经很齐全了，但是还是有可以进步的地方。</p><p>vim 则可以说是程序开发者的一项很好用的工具。</p><p> vim 键盘图： </p><p><img src="/posts/1323888949/d.png" alt></p><h2 id="三种使用模式"><a href="#三种使用模式" class="headerlink" title="三种使用模式"></a>三种使用模式</h2><p> 基本上 vi/vim 共分为三种模式，分别是<strong>命令模式（Command mode）</strong>，<strong>输入模式（Insert mode）</strong>和<strong>底线命令模式（Last line mode）</strong>。这三种模式的作用分别是： </p><h3 id="命令模式"><a href="#命令模式" class="headerlink" title="命令模式"></a><strong>命令模式</strong></h3><p> 用户刚刚启动 vi/vim，便进入了命令模式。 </p><p>以下是常用的几个命令：</p><ul><li><strong>i</strong> 切换到输入模式，以输入字符。</li><li><strong>x</strong> 删除当前光标所在处的字符。</li><li><strong>:</strong> 切换到底线命令模式，以在最底一行输入命令。</li></ul><p>若想要编辑文本：启动Vim，进入了命令模式，按下i，切换到输入模式。</p><h3 id="输入模式"><a href="#输入模式" class="headerlink" title="输入模式"></a><strong>输入模式</strong></h3><p> 在命令模式下按下i就进入了输入模式。 </p><p><img src="/posts/1323888949/e.png" alt="1590625705617"></p><p> <strong>ESC</strong>，退出输入模式，切换到命令模式 </p><h3 id="底线命令模式"><a href="#底线命令模式" class="headerlink" title="底线命令模式"></a><strong>底线命令模式</strong></h3><p> 在命令模式下按下:（英文冒号）就进入了底线命令模式。 </p><ul><li>q 退出程序</li><li>w 保存文件</li></ul><h1 id="账号管理"><a href="#账号管理" class="headerlink" title="账号管理"></a>账号管理</h1><p> Linux系统是一个多用户多任务的分时操作系统，任何一个要使用系统资源的用户，都必须首先向系统管理员申请一个账号，然后以这个账号的身份进入系统。 </p><p>实现用户账号的管理，要完成的工作主要有如下几个方面：。</p><ul><li><p>用户账号的添加、删除与修改。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz home]# users #用于打印输出登录服务器的用户名称</span><br><span class="line">root</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">添加账号 useradd</span><br><span class="line"></span><br><span class="line">useradd 选项 用户名</span><br><span class="line"></span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz home]# ls</span><br><span class="line">xgp</span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz home]# useradd -m hha #创建用户的时候会自动在home目录下创建一个当前用户的目录</span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz home]# ls</span><br><span class="line">hha  xgp</span><br><span class="line"></span><br><span class="line">增加用户账号就是在&#x2F;etc&#x2F;passwd文件中为新用户增加一条记录，同时更新其他系统文件如&#x2F;etc&#x2F;shadow, &#x2F;etc&#x2F;group等。</span><br><span class="line"></span><br><span class="line">参数说明：</span><br><span class="line">选项 :</span><br><span class="line">-c comment 指定一段注释性描述。</span><br><span class="line"></span><br><span class="line">-d 目录 指定用户主目录，如果此目录不存在，则同时使用-m选项，可以创建主目录。</span><br><span class="line"></span><br><span class="line">-g 用户组 指定用户所属的用户组。</span><br><span class="line"></span><br><span class="line">-G 用户组，用户组 指定用户所属的附加组。</span><br><span class="line"></span><br><span class="line">-m　使用者目录如不存在则自动建立。</span><br><span class="line"></span><br><span class="line">-s Shell文件 指定用户的登录Shell。</span><br><span class="line"></span><br><span class="line">-u 用户号 指定用户的用户号，如果同时有-o选项，则可以重复使用其他用户的标识号。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">删除帐号</span><br><span class="line"></span><br><span class="line">userdel 选项 用户名 #常用的选项是 -r，它的作用是把用户的主目录一起删除。</span><br><span class="line">如果一个用户的账号不再使用，可以从系统中删除。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">修改帐号</span><br><span class="line"></span><br><span class="line">usermod 选项 用户名</span><br><span class="line">常用的选项包括-c, -d, -m, -g, -G, -s, -u以及-o等，这些选项的意义与useradd命令中的选项一样，可以为用户指定新的资源值。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">切换用户</span><br><span class="line"></span><br><span class="line">1.切换用户的命令为：su username 【username是你的用户名哦】</span><br><span class="line"></span><br><span class="line">2.从普通用户切换到root用户，还可以使用命令：sudo su</span><br><span class="line"></span><br><span class="line">3.在终端输入exit或logout或使用快捷方式ctrl+d，可以退回到原来用户，其实ctrl+d也是执行的exit命令</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>用户口令的管理。</p><p> 用户管理的一项重要内容是用户口令的管理。用户账号刚创建时没有口令，但是被系统锁定，无法使用，必须为其指定口令后才可以使用，即使是指定空口令。 </p><p> 指定和修改用户口令的Shell命令是passwd。超级用户可以为自己和其他用户指定口令，普通用户只能用它修改自己的口令。 </p><p> 命令的格式为： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd 选项 用户名</span><br></pre></td></tr></table></figure><p>可使用的选项：</p><ul><li><p>-l 锁定口令，即禁用账号。</p></li><li><p>-u 口令解锁。</p></li><li><p>-d 使账号无口令。</p></li><li><p>-f 强迫用户下次登录时修改口令。</p><p> 例如，假设当前用户是普通用户，则下面的命令修改该用户自己的口令 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[xgp@iz8vbhpa2iapxq8jo5nx8pz ~]$ passwd</span><br><span class="line">Changing password for user xgp.</span><br><span class="line">Changing password for xgp.</span><br><span class="line">(current) UNIX password: #输入旧密码</span><br><span class="line">New password:  #设置新密码</span><br><span class="line">Retype new password: #二次验证新密码</span><br><span class="line">passwd: all authentication tokens updated successfully.#密码修改成功</span><br><span class="line"></span><br><span class="line">普通用户修改自己的口令时，passwd命令会先询问原口令，验证后再要求用户输入两遍新口令，如果两次输入的口令一致，则将这个口令指定给用户；</span><br></pre></td></tr></table></figure><p> 如果是超级用户，可以用下列形式指定任何用户的口令： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz home]# passwd xgp</span><br><span class="line">Changing password for user xgp.</span><br><span class="line">New password: #设置新密码</span><br><span class="line">BAD PASSWORD: The password fails the dictionary check - it is too simplistic&#x2F;systematic</span><br><span class="line">Retype new password: #二次验证新密码</span><br><span class="line">passwd: all authentication tokens updated successfully.#密码修改成功</span><br><span class="line"></span><br><span class="line">而超级用户为用户指定口令时，就不需要知道原口令。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd -d xgp</span><br></pre></td></tr></table></figure><p> 此命令将用户 kuangshen的口令删除，这样用户 kuangshen下一次登录时，系统就不再允许该用户登录了。 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># passwd -l xgp</span><br></pre></td></tr></table></figure><p> passwd 命令还可以用 -l(lock) 选项锁定某一用户，使其不能登录，例如： </p></li></ul></li><li><p>用户组的管理。</p></li></ul><p>每个用户都有一个用户组，系统可以对一个用户组中的所有用户进行集中管理。不同Linux 系统对用户组的规定有所不同，如Linux下的用户属于与它同名的用户组，这个用户组在创建用户时同时创建。</p><p>用户组的管理涉及用户组的添加、删除和修改。组的增加、删除和修改实际上就是对/etc/group文件的更新。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line">增加一个新的用户组使用groupadd命令</span><br><span class="line"></span><br><span class="line">groupadd 选项 用户组名字</span><br><span class="line"></span><br><span class="line">可以使用的选项有：</span><br><span class="line"></span><br><span class="line">-g GID 指定新用户组的组标识号（GID）。</span><br><span class="line"></span><br><span class="line">-o 一般与-g选项同时使用，表示新用户组的GID可以与系统已有用户组的GID相同。</span><br><span class="line"></span><br><span class="line">实例1：</span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz home]# groupadd object #增加一个object用户组</span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz home]# cat &#x2F;etc&#x2F;group</span><br><span class="line">root:x:0:</span><br><span class="line">bin:x:1:</span><br><span class="line">daemon:x:2:</span><br><span class="line">sys:x:3:</span><br><span class="line">adm:x:4:</span><br><span class="line">tty:x:5:</span><br><span class="line">disk:x:6:</span><br><span class="line">lp:x:7:</span><br><span class="line">mem:x:8:</span><br><span class="line">kmem:x:9:</span><br><span class="line">wheel:x:10:</span><br><span class="line">cdrom:x:11:</span><br><span class="line">mail:x:12:postfix</span><br><span class="line">man:x:15:</span><br><span class="line">dialout:x:18:</span><br><span class="line">floppy:x:19:</span><br><span class="line">games:x:20:</span><br><span class="line">tape:x:30:</span><br><span class="line">video:x:39:</span><br><span class="line">ftp:x:50:</span><br><span class="line">lock:x:54:</span><br><span class="line">audio:x:63:</span><br><span class="line">nobody:x:99:</span><br><span class="line">users:x:100:</span><br><span class="line">utmp:x:22:</span><br><span class="line">utempter:x:35:</span><br><span class="line">ssh_keys:x:999:</span><br><span class="line">input:x:998:</span><br><span class="line">systemd-journal:x:190:</span><br><span class="line">systemd-network:x:192:</span><br><span class="line">dbus:x:81:</span><br><span class="line">polkitd:x:997:</span><br><span class="line">postdrop:x:90:</span><br><span class="line">postfix:x:89:</span><br><span class="line">chrony:x:996:</span><br><span class="line">sshd:x:74:</span><br><span class="line">ntp:x:38:</span><br><span class="line">tcpdump:x:72:</span><br><span class="line">nscd:x:28:</span><br><span class="line">xgp:x:1000:</span><br><span class="line">object:x:1001:#增加了一个用户组,标识号为1001,其他的为系统默认用户组</span><br><span class="line">实例2：</span><br><span class="line"></span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz home]# groupadd -g 888  object2指定标识号添加用户组</span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz home]# cat &#x2F;etc&#x2F;group</span><br><span class="line">root:x:0:</span><br><span class="line">bin:x:1:</span><br><span class="line">daemon:x:2:</span><br><span class="line">sys:x:3:</span><br><span class="line">adm:x:4:</span><br><span class="line">tty:x:5:</span><br><span class="line">disk:x:6:</span><br><span class="line">lp:x:7:</span><br><span class="line">mem:x:8:</span><br><span class="line">kmem:x:9:</span><br><span class="line">wheel:x:10:</span><br><span class="line">cdrom:x:11:</span><br><span class="line">mail:x:12:postfix</span><br><span class="line">man:x:15:</span><br><span class="line">dialout:x:18:</span><br><span class="line">floppy:x:19:</span><br><span class="line">games:x:20:</span><br><span class="line">tape:x:30:</span><br><span class="line">video:x:39:</span><br><span class="line">ftp:x:50:</span><br><span class="line">lock:x:54:</span><br><span class="line">audio:x:63:</span><br><span class="line">nobody:x:99:</span><br><span class="line">users:x:100:</span><br><span class="line">utmp:x:22:</span><br><span class="line">utempter:x:35:</span><br><span class="line">ssh_keys:x:999:</span><br><span class="line">input:x:998:</span><br><span class="line">systemd-journal:x:190:</span><br><span class="line">systemd-network:x:192:</span><br><span class="line">dbus:x:81:</span><br><span class="line">polkitd:x:997:</span><br><span class="line">postdrop:x:90:</span><br><span class="line">postfix:x:89:</span><br><span class="line">chrony:x:996:</span><br><span class="line">sshd:x:74:</span><br><span class="line">ntp:x:38:</span><br><span class="line">tcpdump:x:72:</span><br><span class="line">nscd:x:28:</span><br><span class="line">xgp:x:1000:</span><br><span class="line">object:x:1001:</span><br><span class="line">object2:x:888:</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">如果要删除一个已有的用户组，使用groupdel命令</span><br><span class="line"></span><br><span class="line">groupdel 用户组</span><br><span class="line"></span><br><span class="line">例如：</span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz home]# groupdel object #删除一个object的用户组</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">修改用户组的属性使用groupmod命令</span><br><span class="line">groupmod 选项 用户组</span><br><span class="line">常用的选项有：</span><br><span class="line"></span><br><span class="line">-g GID 为用户组指定新的组标识号。</span><br><span class="line"></span><br><span class="line">-o 与-g选项同时使用，用户组的新GID可以与系统已有用户组的GID相同。</span><br><span class="line"></span><br><span class="line">-n新用户组 将用户组的名字改为新名字</span><br><span class="line"></span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz home]# groupmod -g 1001 -n object object2</span><br><span class="line">#将object2组,改为标识号为1001 名字为object 的组</span><br></pre></td></tr></table></figure><h1 id="磁盘管理"><a href="#磁盘管理" class="headerlink" title="磁盘管理"></a>磁盘管理</h1><p>Linux磁盘管理常用命令为 df、du。</p><h2 id="df-：列出文件系统的整体磁盘使用量"><a href="#df-：列出文件系统的整体磁盘使用量" class="headerlink" title="df ：列出文件系统的整体磁盘使用量"></a>df ：列出文件系统的整体磁盘使用量</h2><p> df命令参数功能：检查文件系统的磁盘空间占用情况。可以利用该命令来获取硬盘被占用了多少空间，目前还剩下多少空间等信息。 </p><p>选项与参数：</p><ul><li>-a ：列出所有的文件系统，包括系统特有的 /proc 等文件系统；</li><li>-k ：以 KBytes 的容量显示各文件系统；</li><li>-m ：以 MBytes 的容量显示各文件系统；</li><li>-h ：以人们较易阅读的 GBytes, MBytes, KBytes 等格式自行显示；</li><li>-H ：以 M=1000K 取代 M=1024K 的进位方式；</li><li>-T ：显示文件系统类型, 连同该 partition 的 filesystem 名称 (例如 ext3) 也列出；</li><li>-i ：不用硬盘容量，而以 inode 的数量来显示</li></ul><h2 id="du：检查磁盘空间使用量"><a href="#du：检查磁盘空间使用量" class="headerlink" title="du：检查磁盘空间使用量"></a>du：检查磁盘空间使用量</h2><p> Linux du命令也是查看使用空间的，但是与df命令不同的是Linux du命令是对文件和目录磁盘使用的空间的查看，还是和df命令有一些区别的，这里介绍Linux du命令。 </p><p>选项与参数：</p><ul><li>-a ：列出所有的文件与目录容量，因为默认仅统计目录底下的文件量而已。</li><li>-h ：以人们较易读的容量格式 (G/M) 显示；</li><li>-s ：列出总量而已，而不列出每个各别的目录占用容量；</li><li>-S ：不包括子目录下的总计，与 -s 有点差别。</li><li>-k ：以 KBytes 列出容量显示；</li><li>-m ：以 MBytes 列出容量显示；</li></ul><h2 id="磁盘挂载"><a href="#磁盘挂载" class="headerlink" title="磁盘挂载"></a>磁盘挂载</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz &#x2F;]mount &#x2F;dev&#x2F;hdc6 &#x2F;mnt&#x2F;hdc6 #&#x2F;dev&#x2F;hdc6 挂载到 &#x2F;mnt&#x2F;hdc6 上面！</span><br></pre></td></tr></table></figure><h2 id="磁盘卸载"><a href="#磁盘卸载" class="headerlink" title="磁盘卸载"></a>磁盘卸载</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">磁盘卸载命令 umount 语法：</span><br><span class="line">umount 参数 装置文件名或挂载点</span><br><span class="line"></span><br><span class="line">选项与参数：</span><br><span class="line">-f ：强制卸除！可用在类似网络文件系统 (NFS) 无法读取到的情况下；</span><br><span class="line">-n ：不升级 &#x2F;etc&#x2F;mtab 情况下卸除。</span><br><span class="line"></span><br><span class="line">卸载&#x2F;dev&#x2F;hdc6</span><br><span class="line">[root@iz8vbhpa2iapxq8jo5nx8pz &#x2F;]umount &#x2F;dev&#x2F;hdc6</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux操作系统 </category>
          
          <category> centos7.4 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 操作系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git</title>
      <link href="/posts/1774397340/"/>
      <url>/posts/1774397340/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p><font size="5" color="red">参考链接地址: <a href="https://www.bilibili.com/video/BV1FE411P7B3?from=search&amp;seid=10767734199720216646" target="_blank" rel="noopener">https://www.bilibili.com/video/BV1FE411P7B3?from=search&amp;seid=10767734199720216646</a></font></p><p>学习git之前,我们需要了解版本控制!</p><h1 id="什么是版本控制"><a href="#什么是版本控制" class="headerlink" title="什么是版本控制?"></a>什么是版本控制?</h1><p> <font size="3" color="red"> 版本控制是指对软件开发过程中各种程序代码、<a href="https://baike.baidu.com/item/配置文件/286550" target="_blank" rel="noopener"><a href="https://baike.baidu.com/item/配置文件/286550" target="_blank" rel="noopener">配置文件</a></a>及说明文档等文件变更的管理，是<a href="https://baike.baidu.com/item/软件配置管理/3765602" target="_blank" rel="noopener"><a href="https://baike.baidu.com/item/软件配置管理/3765602" target="_blank" rel="noopener">软件配置管理</a></a>的核心思想之一。 </font> </p><p>没有进行版本控制或者版本控制本身缺乏正确的流程管理，在软件开发过程中将会引入很多问题，如软件代码的一致性、软件内容的冗余、软件过程的事物性、软件开发过程中的并发性、软件源代码的安全性，以及软件的整合等问题。 </p><p> 无论是工作还是学习，或者是自己做笔记，都经历过这样一个阶段！我们就迫切需要一个版本控制工具！ </p><p><img src="/posts/1774397340/a.png" alt="1589633288016"></p><h1 id="常见的版本控制工具"><a href="#常见的版本控制工具" class="headerlink" title="常见的版本控制工具"></a>常见的版本控制工具</h1><p> 主流的版本控制器有如下这些： </p><ul><li><strong>Git</strong></li><li><strong>SVN</strong>（Subversion）</li><li><strong>CVS</strong>（Concurrent Versions System）</li><li><strong>VSS</strong>（Micorosoft Visual SourceSafe）</li><li><strong>TFS</strong>（Team Foundation Server）</li><li>Visual Studio Online</li></ul><p> 版本控制产品非常的多（Perforce、Rational ClearCase、RCS（GNU Revision Control System）、Serena Dimention、SVK、BitKeeper、Monotone、Bazaar、Mercurial、SourceGear Vault），现在影响力最大且使用最广泛的是Git与SVN </p><h2 id="版本控制分类"><a href="#版本控制分类" class="headerlink" title="版本控制分类"></a>版本控制分类</h2><h3 id="本地版本控制"><a href="#本地版本控制" class="headerlink" title="本地版本控制"></a><strong>本地版本控制</strong></h3><p>  记录文件每次的更新，可以对每个版本做一个快照，或是记录补丁文件，适合个人用，如RCS。 </p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0pvdXJXb24vaW1hZ2UvbWFzdGVyL0dpdCVFNyVBRSU4MCVFNCVCQiU4Qi8lRTYlOUMlQUMlRTUlOUMlQjAlRTclODklODglRTYlOUMlQUMlRTYlOEUlQTclRTUlODglQjYlRTclQjMlQkIlRTclQkIlOUYucG5n?x-oss-process=image/format,png" alt></p><h3 id="集中版本控制-SVN"><a href="#集中版本控制-SVN" class="headerlink" title="集中版本控制  SVN"></a><strong>集中版本控制  SVN</strong></h3><p> 所有的版本数据都保存在服务器上，协同开发者从服务器上同步更新或上传自己的修改 </p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0pvdXJXb24vaW1hZ2UvbWFzdGVyL0dpdCVFNyVBRSU4MCVFNCVCQiU4Qi8lRTklOUIlODYlRTQlQjglQUQlRTUlQkMlOEYlRTclODklODglRTYlOUMlQUMlRTYlOEUlQTclRTUlODglQjYlRTclQjMlQkIlRTclQkIlOUYucG5n?x-oss-process=image/format,png" alt></p><p> 所有的版本数据都存在服务器上，用户的本地只有自己以前所同步的版本，如果不连网的话，用户就看不到历史版本，也无法切换版本验证问题，或在不同分支工作。而且，所有数据都保存在单一的服务器上，有很大的风险这个服务器会损坏，这样就会丢失所有的数据，当然可以定期备份。代表产品：SVN、CVS、VSS </p><h3 id="分布式版本控制-Git"><a href="#分布式版本控制-Git" class="headerlink" title="分布式版本控制 Git"></a>分布式版本控制 Git</h3><p>每个人都拥有全部的代码！安全隐患！</p><p>所有版本信息仓库全部同步到本地的每个用户，这样就可以在本地查看所有版本历史，可以离线在本地提交，只需在连网时push到相应的服务器或其他用户那里。由于每个用户那里保存的都是所有的版本数据，只要有一个用户的设备没有问题就可以恢复所有的数据，但这增加了本地存储空间的占用。</p><p>不会因为服务器损坏或者网络问题，造成不能工作的情况！</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0pvdXJXb24vaW1hZ2UvbWFzdGVyL0dpdCVFNyVBRSU4MCVFNCVCQiU4Qi8lRTUlODglODYlRTUlQjglODMlRTUlQkMlOEYlRTclODklODglRTYlOUMlQUMlRTYlOEUlQTclRTUlODglQjYlRTclQjMlQkIlRTclQkIlOUYucG5n?x-oss-process=image/format,png" alt></p><h3 id="Git与SVN的主要区别"><a href="#Git与SVN的主要区别" class="headerlink" title="Git与SVN的主要区别"></a>Git与SVN的主要区别</h3><p> SVN是集中式版本控制系统，版本库是集中放在中央服务器的，而工作的时候，用的都是自己的电脑，所以首先要从中央服务器得到最新的版本，然后工作，完成工作后，需要把自己做完的活推送到中央服务器。集中式版本控制系统是必须联网才能工作，对网络带宽要求较高。 </p><p> Git是分布式版本控制系统，没有中央服务器，每个人的电脑就是一个完整的版本库，工作的时候不需要联网了，因为版本都在自己电脑上。协同的方法是这样的：比如说自己在电脑上改了文件A，其他人也在电脑上改了文件A，这时，你们两之间只需把各自的修改推送给对方，就可以互相看到对方的修改了。Git可以直接看到更新了哪些代码和文件！ </p><p> <strong>Git是目前世界上最先进的分布式版本控制系统。</strong> </p><h1 id="聊聊Git的历史"><a href="#聊聊Git的历史" class="headerlink" title="聊聊Git的历史"></a>聊聊Git的历史</h1><p>同生活中的许多伟大事物一样，Git 诞生于一个极富纷争大举创新的年代。</p><p>Linux 内核开源项目有着为数众广的参与者。绝大多数的 Linux 内核维护工作都花在了提交补丁和保存归档的繁琐事务上(1991－2002年间)。到 2002 年，整个项目组开始启用一个专有的分布式版本控制系统 BitKeeper 来管理和维护代码。</p><p>Linux社区中存在很多的大佬！破解研究 BitKeeper ！</p><p>到了 2005 年，开发 BitKeeper 的商业公司同 Linux 内核开源社区的合作关系结束，他们收回了 Linux 内核社区免费使用 BitKeeper 的权力。这就迫使 Linux 开源社区(特别是 Linux 的缔造者 Linus Torvalds)基于使用 BitKeeper 时的经验教训，开发出自己的版本系统。（2周左右！） 也就是后来的 Git！</p><p> <strong>Git是目前世界上最先进的分布式版本控制系统。</strong></p><p> Git是免费、开源的，最初Git是为辅助 Linux 内核开发的，来替代 BitKeeper！ </p><h1 id="Git的安装和配置"><a href="#Git的安装和配置" class="headerlink" title="Git的安装和配置"></a>Git的安装和配置</h1><p>下载地址&gt;&gt; <a href="https://git-scm.com/downloads" target="_blank" rel="noopener">https://git-scm.com/downloads</a> ,下载自己电脑对应的系统</p><p> 所有东西下载慢的话就可以去找镜像！ </p><p> 官网下载太慢，我们可以使用淘宝镜像下载：<a href="http://npm.taobao.org/mirrors/git-for-windows/" target="_blank" rel="noopener">http://npm.taobao.org/mirrors/git-for-windows/</a> </p><p> 安装：无脑下一步即可！安装完毕就可以使用了！ </p><h2 id="启动Git"><a href="#启动Git" class="headerlink" title="启动Git"></a>启动Git</h2><p> 安装成功后在开始菜单中会有Git项，菜单下有3个程序：任意文件夹下右键也可以看到对应的程序！ </p><p><img src="/posts/1774397340/b.png" alt></p><p><strong>Git Bash：</strong>Unix与Linux风格的命令行，使用最多，推荐最多</p><p><strong>Git CMD：</strong>Windows风格的命令行</p><p><strong>Git GUI</strong>：图形界面的Git，不建议初学者使用，尽量先熟悉常用命令</p><h2 id="常用的Linux命令"><a href="#常用的Linux命令" class="headerlink" title="常用的Linux命令"></a>常用的Linux命令</h2><p>1）、cd : 改变目录。</p><p>2）、cd . . 回退到上一个目录，直接cd进入默认目录</p><p>3）、pwd : 显示当前所在的目录路径。</p><p>4）、ls(ll):  都是列出当前目录中的所有文件，只不过ll(两个ll)列出的内容更为详细。</p><p>5）、touch : 新建一个文件 如 touch index.js 就会在当前目录下新建一个index.js文件。</p><p>6）、rm:  删除一个文件, rm index.js 就会把index.js文件删除。</p><p>7）、mkdir:  新建一个目录,就是新建一个文件夹。</p><p>8）、rm -r :  删除一个文件夹, rm -r src 删除src目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf &#x2F; 切勿在Linux中尝试！删除电脑中全部文件！</span><br></pre></td></tr></table></figure><p>9）、mv 移动文件, mv index.html src index.html 是我们要移动的文件, src 是目标文件夹,当然, 这样写,必须保证文件和目标文件夹在同一目录下。</p><p>10）、reset 重新初始化终端/清屏。</p><p>11）、clear 清屏。</p><p>12）、history 查看命令历史。</p><p>13）、help 帮助。</p><p>14）、exit 退出。</p><p>15）、#表示注释</p><h2 id="Git配置"><a href="#Git配置" class="headerlink" title="Git配置"></a>Git配置</h2><p> 所有的配置文件，其实都保存在本地！ </p><p><img src="/posts/1774397340/c.png" alt></p><p> 查看不同级别的配置文件： </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">查看系统configgit config --system --list　　<span class="comment">#查看当前用户（global）配置git config --global  --list</span></span></span><br></pre></td></tr></table></figure><p> <strong>Git相关的配置文件：</strong> </p><p> 1）、Git\etc\gitconfig  ：Git 安装目录下的 gitconfig   –system 系统级 </p><p> 2）、C:\Users\Administrator\ .gitconfig   只适用于当前登录用户的配置  –global 全局 </p><p>这里默认是什么都没有的，需要设置</p><p><img src="/posts/1774397340/d.png" alt></p><h3 id="设置用户名和邮箱-用户表示-必要"><a href="#设置用户名和邮箱-用户表示-必要" class="headerlink" title="设置用户名和邮箱(用户表示,必要)"></a>设置用户名和邮箱(用户表示,必要)</h3><p> 当你安装Git后首先要做的事情是设置你的用户名称和e-mail地址。这是非常重要的，因为每次Git提交都会使用该信息。它被永远的嵌入到了你的提交中： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;github账号&quot;  #名称</span><br><span class="line">git config --global user.email github邮箱   #邮箱</span><br></pre></td></tr></table></figure><p> 只需要做一次这个设置，如果你传递了–global 选项，因为Git将总是会使用该信息来处理你在系统中所做的一切操作。如果你希望在一个特定的项目中使用不同的名称或e-mail地址，你可以在该项目中运行该命令而不要–global选项。总之–global为全局配置，不加为某个项目的特定配置。 </p><p><img src="/posts/1774397340/e.png" alt></p><h1 id="Git基本理论（重要）"><a href="#Git基本理论（重要）" class="headerlink" title="Git基本理论（重要）"></a>Git基本理论（重要）</h1><p>三个区域</p><p> Git本地有三个工作区域：工作目录（Working Directory）、暂存区(Stage/Index)、资源库(Repository或Git Directory)。如果在加上远程的git仓库(Remote Directory)就可以分为四个工作区域。文件在这四个区域之间的转换关系如下： </p><p><img src="/posts/1774397340/f.png" alt></p><ul><li><p>Workspace：工作区，就是你平时存放项目代码的地方</p></li><li><p>Index / Stage：暂存区，用于临时存放你的改动，事实上它只是一个文件，保存即将提交到文件列表信息</p></li><li><p>Repository：仓库区（或本地仓库），就是安全存放数据的位置，这里面有你提交到所有版本的数据。其中HEAD指向最新放入仓库的版本</p></li><li><p>Remote：远程仓库，托管代码的服务器，可以简单的认为是你项目组中的一台电脑用于远程数据交换</p><p>本地的三个区域确切的说应该是git仓库中HEAD指向的版本： </p></li></ul><p><img src="/posts/1774397340/g.png" alt></p><ul><li>Directory：使用Git管理的一个目录，也就是一个仓库，包含我们的工作空间和Git的管理空间。</li><li>WorkSpace：需要通过Git进行版本控制的目录和文件，这些目录和文件组成了工作空间。</li><li>.git：存放Git管理信息的目录，初始化仓库的时候自动创建。</li><li>Index/Stage：暂存区，或者叫待提交更新区，在提交进入repo之前，我们可以把所有的更新放在暂存区。</li><li>Local Repo：本地仓库，一个存放在本地的版本库；HEAD会只是当前的开发分支（branch）。</li><li>Stash：隐藏，是一个工作状态保存栈，用于保存/恢复WorkSpace中的临时状态。</li></ul><h2 id="工作流程"><a href="#工作流程" class="headerlink" title="工作流程"></a>工作流程</h2><p>git的工作流程一般是这样的：</p><p>１、在工作目录中添加、修改文件；</p><p>２、将需要进行版本管理的文件放入暂存区域；</p><p>３、将暂存区域的文件提交到git仓库。</p><p>因此，git管理的文件有三种状态：已修改（modified）,已暂存（staged）,已提交(committed)</p><p><img src="/posts/1774397340/h.png" alt></p><h2 id="Git项目搭建"><a href="#Git项目搭建" class="headerlink" title="Git项目搭建"></a>Git项目搭建</h2><p><strong>创建工作目录与常用指令</strong></p><p>工作目录（WorkSpace)一般就是你希望Git帮助你管理的文件夹，可以是你项目的目录，也可以是一个空目录，建议不要有中文。</p><p>日常使用只要记住下图6个命令：</p><p><img src="/posts/1774397340/aa.png" alt></p><h3 id="本地仓库搭建"><a href="#本地仓库搭建" class="headerlink" title="本地仓库搭建"></a>本地仓库搭建</h3><p>创建本地仓库的方法有两种：一种是创建全新的仓库，另一种是克隆远程仓库。</p><p>1、创建全新的仓库，需要用GIT管理的项目的根目录执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 在当前目录新建一个Git代码库</span><br><span class="line">git init</span><br></pre></td></tr></table></figure><p> 2、执行后可以看到，仅仅在项目目录多出了一个.git目录，关于版本等的所有信息都在这个目录里面。 </p><h3 id="克隆远程仓库"><a href="#克隆远程仓库" class="headerlink" title="克隆远程仓库"></a>克隆远程仓库</h3><p> 1、另一种方式是克隆远程目录，由于是将远程服务器上的仓库完全镜像一份至本地！ </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">克隆一个项目和它的整个代码历史(版本信息)</span><br><span class="line"> git clone [github地址]</span><br></pre></td></tr></table></figure><p> 2、去 gitee 或者 github 上克隆一个测试！ </p><h1 id="Git文件操作"><a href="#Git文件操作" class="headerlink" title="Git文件操作"></a>Git文件操作</h1><h2 id="文件的四种状态"><a href="#文件的四种状态" class="headerlink" title="文件的四种状态"></a>文件的四种状态</h2><p>版本控制就是对文件的版本控制，要对文件进行修改、提交等操作，首先要知道文件当前在什么状态，不然可能会提交了现在还不想提交的文件，或者要提交的文件没提交上。</p><ul><li>Untracked: 未跟踪, 此文件在文件夹中, 但并没有加入到git库, 不参与版本控制. 通过git add 状态变为Staged.</li><li>Unmodify: 文件已经入库, 未修改, 即版本库中的文件快照内容与文件夹中完全一致. 这种类型的文件有两种去处, 如果它被修改, 而变为Modified. 如果使用git rm移出版本库, 则成为Untracked文件</li><li>Modified: 文件已修改, 仅仅是修改, 并没有进行其他的操作. 这个文件也有两个去处, 通过git add可进入暂存staged状态, 使用git checkout 则丢弃修改过, 返回到unmodify状态, 这个git checkout即从库中取出文件, 覆盖当前修改 !</li><li>Staged: 暂存状态. 执行git commit则将修改同步到库中, 这时库中的文件和本地文件又变为一致, 文件为Unmodify状态. 执行git reset HEAD filename取消暂存, 文件状态为Modified</li></ul><h2 id="查看文件状态"><a href="#查看文件状态" class="headerlink" title="查看文件状态"></a>查看文件状态</h2><p> 上面说文件有4种状态，通过如下命令可以查看到文件的状态： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#查看指定文件状态</span><br><span class="line">git status [filename]</span><br><span class="line"></span><br><span class="line">#查看所有文件状态</span><br><span class="line">git status</span><br><span class="line"></span><br><span class="line"># git add .                  添加所有文件到暂存区</span><br><span class="line"># git commit -m &quot;消息内容&quot;    提交暂存区中的内容到本地仓库 -m 提交信息</span><br></pre></td></tr></table></figure><h2 id="忽略文件"><a href="#忽略文件" class="headerlink" title="忽略文件"></a>忽略文件</h2><p>有些时候我们不想把某些文件纳入版本控制中，比如数据库文件，临时文件，设计文件等</p><p>在主目录下建立”.gitignore”文件，此文件有如下规则：</p><ol><li>忽略文件中的空行或以井号（#）开始的行将会被忽略。</li><li>可以使用Linux通配符。例如：星号（*）代表任意多个字符，问号（？）代表一个字符，方括号（[abc]）代表可选字符范围，大括号（{string1,string2,…}）代表可选的字符串等。</li><li>如果名称的最前面有一个感叹号（!），表示例外规则，将不被忽略。</li><li>如果名称的最前面是一个路径分隔符（/），表示要忽略的文件在此目录下，而子目录中的文件不忽略。</li><li>如果名称的最后面是一个路径分隔符（/），表示要忽略的是此目录下该名称的子目录，而非文件（默认文件或目录都忽略）。</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#为注释</span><br><span class="line">*.txt        #忽略所有 .txt结尾的文件,这样的话上传就不会被选中！</span><br><span class="line">!lib.txt     #但lib.txt除外</span><br><span class="line">&#x2F;temp        #仅忽略项目根目录下的TODO文件,不包括其它目录temp</span><br><span class="line">build&#x2F;       #忽略build&#x2F;目录下的所有文件</span><br><span class="line">doc&#x2F;*.txt    #会忽略 doc&#x2F;notes.txt 但不包括 doc&#x2F;server&#x2F;arch.txt</span><br></pre></td></tr></table></figure><h1 id="使用github"><a href="#使用github" class="headerlink" title="使用github"></a>使用github</h1><p>1、注册账号  <a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a> </p><p>2、 设置本机绑定SSH公钥，实现免密码登录！（免密码登录，这一步挺重要的，github是远程仓库，我们是平时工作在本地仓库！) </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 进入 C:\Users\thinkpad\.ssh目录</span><br><span class="line"># 生成公钥ssh-keygen -t rsa   #一直点击回车</span><br></pre></td></tr></table></figure><p><img src="/posts/1774397340/bb.png" alt></p><p> 3、将公钥信息public key 添加到github账户中即可！ </p><p><img src="/posts/1774397340/cc.png" alt> </p><p> 4、在github新建一个仓库</p><p><img src="/posts/1774397340/dd.png" alt> </p><p>5、克隆到本地</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone 仓库地址</span><br></pre></td></tr></table></figure><h1 id="GIT分支"><a href="#GIT分支" class="headerlink" title="GIT分支"></a>GIT分支</h1><p> 分支在GIT中相对较难，分支就是科幻电影里面的平行宇宙，如果两个平行宇宙互不干扰，那对现在的你也没啥影响。不过，在某个时间点，两个平行宇宙合并了，我们就需要处理一些问题了！ </p><p><img src="/posts/1774397340/ee.png" alt> </p><p> git分支中常用指令： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># 列出所有本地分支</span><br><span class="line">git branch</span><br><span class="line"></span><br><span class="line"># 列出所有远程分支</span><br><span class="line">git branch -r</span><br><span class="line"></span><br><span class="line"># 新建一个分支，但依然停留在当前分支</span><br><span class="line">git branch [branch-name]</span><br><span class="line"></span><br><span class="line"># 新建一个分支，并切换到该分支</span><br><span class="line">git checkout -b [branch]</span><br><span class="line"></span><br><span class="line"># 合并指定分支到当前分支</span><br><span class="line">$ git merge [branch]</span><br><span class="line"></span><br><span class="line"># 删除分支</span><br><span class="line">$ git branch -d [branch-name]</span><br><span class="line"></span><br><span class="line"># 删除远程分支</span><br><span class="line">$ git push origin --delete [branch-name]</span><br><span class="line">$ git branch -dr [remote&#x2F;branch]</span><br></pre></td></tr></table></figure><p> 如果同一个文件在合并分支时都被修改了则会引起冲突：解决的办法是我们可以修改冲突文件后重新提交！选择要保留他的代码还是你的代码！ </p><p><font size="5" color="red"> master主分支应该非常稳定，用来发布新版本，一般情况下不允许在上面工作，工作一般情况下在新建的dev分支上工作，工作完后，比如上要发布，或者说dev分支代码稳定后可以合并到主分支master上来。 </font></p>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>ngrok实现内网穿透</title>
      <link href="/posts/3184699506/"/>
      <url>/posts/3184699506/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="ngrok是什么"><a href="#ngrok是什么" class="headerlink" title="ngrok是什么?"></a>ngrok是什么?</h1><p>ngrok 是一个<a href="https://baike.baidu.com/item/反向代理/7793488" target="_blank" rel="noopener">反向代理</a>，通过在公共的端点和本地运行的 Web 服务器之间建立一个安全的通道。ngrok 可捕获和分析所有通道上的流量，便于后期分析和重放。</p><p><strong>反向代理</strong>在<a href="https://baike.baidu.com/item/计算机网络" target="_blank" rel="noopener">计算机网络</a>中是<a href="https://baike.baidu.com/item/代理服务器" target="_blank" rel="noopener">代理服务器</a>的一种。服务器根据客户端的请求，从其关系的一组或多组后端<a href="https://baike.baidu.com/item/服务器" target="_blank" rel="noopener">服务器</a>（如<a href="https://baike.baidu.com/item/Web服务器" target="_blank" rel="noopener">Web服务器</a>）上获取资源，然后再将这些资源返回给客户端，客户端只会得知反向代理的IP地址，而不知道在代理服务器后面的服务器集群的存在。</p><h1 id="怎么实现ngrok"><a href="#怎么实现ngrok" class="headerlink" title="怎么实现ngrok?"></a>怎么实现ngrok?</h1><h2 id="开始隧道"><a href="#开始隧道" class="headerlink" title="开始隧道"></a>开始隧道</h2><p>进入官方注册账号  <a href="http://www.ngrok.cc/" target="_blank" rel="noopener">http://www.ngrok.cc/</a> </p><p>然后登录,会出现以下界面</p><p><img src="/posts/3184699506/a.png" alt></p><p>点击开通隧道,会出现以下界面</p><p><img src="/posts/3184699506/b.png" alt></p><p>最下面有一个免费的但是网速非常慢,2个人同时访问网站都会非常慢,根据自己需求而定.当然了,网速快的也要收取一定的费用</p><p><img src="/posts/3184699506/c.png" alt></p><h2 id="隧道管理"><a href="#隧道管理" class="headerlink" title="隧道管理"></a>隧道管理</h2><p>购买完以后,点击隧道管理</p><p><img src="/posts/3184699506/d.png" alt></p><p>然后解压文件,</p><p><img src="/posts/3184699506/e.png" alt></p><p><img src="/posts/3184699506/f.png" alt></p><h2 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h2><h4><center>通过隧道管理赠送的域名进行访问</center> </h4>![](ngrok实现内网穿透/g.png)]]></content>
      
      
      <categories>
          
          <category> 网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 内网穿透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java生成二维码</title>
      <link href="/posts/1288042365/"/>
      <url>/posts/1288042365/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><a id="more"></a><h2 id="引入por依赖"><a href="#引入por依赖" class="headerlink" title="引入por依赖"></a>引入por依赖</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">引入pom依赖</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.google.zxing&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;core&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;3.1.0&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.google.zxing&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;javase&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;3.1.0&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h2 id="创建class文件（QRCodeUtils-）"><a href="#创建class文件（QRCodeUtils-）" class="headerlink" title="创建class文件（QRCodeUtils ）"></a>创建class文件（QRCodeUtils ）</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.awt.BasicStroke;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.Graphics;</span><br><span class="line"><span class="keyword">import</span> java.awt.Graphics2D;</span><br><span class="line"><span class="keyword">import</span> java.awt.Image;</span><br><span class="line"><span class="keyword">import</span> java.awt.Shape;</span><br><span class="line"><span class="keyword">import</span> java.awt.geom.RoundRectangle2D;</span><br><span class="line"><span class="keyword">import</span> java.awt.image.BufferedImage;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.Hashtable;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.imageio.ImageIO;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.zxing.BarcodeFormat;</span><br><span class="line"><span class="keyword">import</span> com.google.zxing.BinaryBitmap;</span><br><span class="line"><span class="keyword">import</span> com.google.zxing.DecodeHintType;</span><br><span class="line"><span class="keyword">import</span> com.google.zxing.EncodeHintType;</span><br><span class="line"><span class="keyword">import</span> com.google.zxing.MultiFormatReader;</span><br><span class="line"><span class="keyword">import</span> com.google.zxing.MultiFormatWriter;</span><br><span class="line"><span class="keyword">import</span> com.google.zxing.Result;</span><br><span class="line"><span class="keyword">import</span> com.google.zxing.client.j2se.BufferedImageLuminanceSource;</span><br><span class="line"><span class="keyword">import</span> com.google.zxing.common.BitMatrix;</span><br><span class="line"><span class="keyword">import</span> com.google.zxing.common.HybridBinarizer;</span><br><span class="line"><span class="keyword">import</span> com.google.zxing.qrcode.decoder.ErrorCorrectionLevel;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QRCodeUtils</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String CHARSET = <span class="string">"utf-8"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String FORMAT_NAME = <span class="string">"JPG"</span>;</span><br><span class="line">    <span class="comment">// 二维码尺寸    </span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> QRCODE_SIZE = <span class="number">300</span>;</span><br><span class="line">    <span class="comment">// LOGO宽度    </span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> WIDTH = <span class="number">60</span>;</span><br><span class="line">    <span class="comment">// LOGO高度    </span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> HEIGHT = <span class="number">60</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> BufferedImage <span class="title">createImage</span><span class="params">(String content, String imgPath,</span></span></span><br><span class="line"><span class="function"><span class="params">                                             <span class="keyword">boolean</span> needCompress)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Hashtable&lt;EncodeHintType, Object&gt; hints = <span class="keyword">new</span> Hashtable&lt;EncodeHintType, Object&gt;();</span><br><span class="line">        hints.put(EncodeHintType.ERROR_CORRECTION, ErrorCorrectionLevel.H);</span><br><span class="line">        hints.put(EncodeHintType.CHARACTER_SET, CHARSET);</span><br><span class="line">        hints.put(EncodeHintType.MARGIN, <span class="number">1</span>);</span><br><span class="line">        BitMatrix bitMatrix = <span class="keyword">new</span> MultiFormatWriter().encode(content,</span><br><span class="line">                BarcodeFormat.QR_CODE, QRCODE_SIZE, QRCODE_SIZE, hints);</span><br><span class="line">        <span class="keyword">int</span> width = bitMatrix.getWidth();</span><br><span class="line">        <span class="keyword">int</span> height = bitMatrix.getHeight();</span><br><span class="line">        BufferedImage image = <span class="keyword">new</span> BufferedImage(width, height,</span><br><span class="line">                BufferedImage.TYPE_INT_RGB);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> x = <span class="number">0</span>; x &lt; width; x++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> y = <span class="number">0</span>; y &lt; height; y++) &#123;</span><br><span class="line">                image.setRGB(x, y, bitMatrix.get(x, y) ? <span class="number">0xFF000000</span></span><br><span class="line">                        : <span class="number">0xFFFFFFFF</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (imgPath == <span class="keyword">null</span> || <span class="string">""</span>.equals(imgPath)) &#123;</span><br><span class="line">            <span class="keyword">return</span> image;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 插入图片    </span></span><br><span class="line">        QRCodeUtils.insertImage(image, imgPath, needCompress);</span><br><span class="line">        <span class="keyword">return</span> image;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 插入LOGO  </span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> source</span></span><br><span class="line"><span class="comment">     *            二维码图片  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> imgPath</span></span><br><span class="line"><span class="comment">     *            LOGO图片地址  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> needCompress</span></span><br><span class="line"><span class="comment">     *            是否压缩  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">insertImage</span><span class="params">(BufferedImage source, String imgPath,</span></span></span><br><span class="line"><span class="function"><span class="params">                                    <span class="keyword">boolean</span> needCompress)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        File file = <span class="keyword">new</span> File(imgPath);</span><br><span class="line">        <span class="keyword">if</span> (!file.exists()) &#123;</span><br><span class="line">            System.err.println(<span class="string">""</span>+imgPath+<span class="string">"   该文件不存在！"</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Image src = ImageIO.read(<span class="keyword">new</span> File(imgPath));</span><br><span class="line">        <span class="keyword">int</span> width = src.getWidth(<span class="keyword">null</span>);</span><br><span class="line">        <span class="keyword">int</span> height = src.getHeight(<span class="keyword">null</span>);</span><br><span class="line">        <span class="keyword">if</span> (needCompress) &#123; <span class="comment">// 压缩LOGO    </span></span><br><span class="line">            <span class="keyword">if</span> (width &gt; WIDTH) &#123;</span><br><span class="line">                width = WIDTH;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (height &gt; HEIGHT) &#123;</span><br><span class="line">                height = HEIGHT;</span><br><span class="line">            &#125;</span><br><span class="line">            Image image = src.getScaledInstance(width, height,</span><br><span class="line">                    Image.SCALE_SMOOTH);</span><br><span class="line">            BufferedImage tag = <span class="keyword">new</span> BufferedImage(width, height,</span><br><span class="line">                    BufferedImage.TYPE_INT_RGB);</span><br><span class="line">            Graphics g = tag.getGraphics();</span><br><span class="line">            g.drawImage(image, <span class="number">0</span>, <span class="number">0</span>, <span class="keyword">null</span>); <span class="comment">// 绘制缩小后的图    </span></span><br><span class="line">            g.dispose();</span><br><span class="line">            src = image;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 插入LOGO    </span></span><br><span class="line">        Graphics2D graph = source.createGraphics();</span><br><span class="line">        <span class="keyword">int</span> x = (QRCODE_SIZE - width) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">int</span> y = (QRCODE_SIZE - height) / <span class="number">2</span>;</span><br><span class="line">        graph.drawImage(src, x, y, width, height, <span class="keyword">null</span>);</span><br><span class="line">        Shape shape = <span class="keyword">new</span> RoundRectangle2D.Float(x, y, width, width, <span class="number">6</span>, <span class="number">6</span>);</span><br><span class="line">        graph.setStroke(<span class="keyword">new</span> BasicStroke(<span class="number">3f</span>));</span><br><span class="line">        graph.draw(shape);</span><br><span class="line">        graph.dispose();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成二维码(内嵌LOGO)  </span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> content</span></span><br><span class="line"><span class="comment">     *            内容  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> imgPath</span></span><br><span class="line"><span class="comment">     *            LOGO地址  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> destPath</span></span><br><span class="line"><span class="comment">     *            存放目录  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> needCompress</span></span><br><span class="line"><span class="comment">     *            是否压缩LOGO  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">encode</span><span class="params">(String content, String imgPath, String destPath,</span></span></span><br><span class="line"><span class="function"><span class="params">                              <span class="keyword">boolean</span> needCompress)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        BufferedImage image = QRCodeUtils.createImage(content, imgPath,</span><br><span class="line">                needCompress);</span><br><span class="line">        mkdirs(destPath);</span><br><span class="line">        String file = <span class="keyword">new</span> Random().nextInt(<span class="number">99999999</span>)+<span class="string">".jpg"</span>;</span><br><span class="line">        ImageIO.write(image, FORMAT_NAME, <span class="keyword">new</span> File(destPath+<span class="string">"/"</span>+file));</span><br><span class="line">        <span class="keyword">return</span> file;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 当文件夹不存在时，mkdirs会自动创建多层目录，区别于mkdir．(mkdir如果父目录不存在则会抛出异常)  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2013-12-11 上午10:16:36  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> destPath 存放目录  </span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">mkdirs</span><span class="params">(String destPath)</span> </span>&#123;</span><br><span class="line">        File file =<span class="keyword">new</span> File(destPath);</span><br><span class="line">        <span class="comment">//当文件夹不存在时，mkdirs会自动创建多层目录，区别于mkdir．(mkdir如果父目录不存在则会抛出异常)    </span></span><br><span class="line">        <span class="keyword">if</span> (!file.exists() &amp;&amp; !file.isDirectory()) &#123;</span><br><span class="line">            file.mkdirs();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成二维码(内嵌LOGO)  </span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> content</span></span><br><span class="line"><span class="comment">     *            内容  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> imgPath</span></span><br><span class="line"><span class="comment">     *            LOGO地址  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> destPath</span></span><br><span class="line"><span class="comment">     *            存储地址  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">encode</span><span class="params">(String content, String imgPath, String destPath)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        QRCodeUtils.encode(content, imgPath, destPath, <span class="keyword">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成二维码  </span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> content</span></span><br><span class="line"><span class="comment">     *            内容  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> destPath</span></span><br><span class="line"><span class="comment">     *            存储地址  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> needCompress</span></span><br><span class="line"><span class="comment">     *            是否压缩LOGO  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">encode</span><span class="params">(String content, String destPath,</span></span></span><br><span class="line"><span class="function"><span class="params">                              <span class="keyword">boolean</span> needCompress)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        QRCodeUtils.encode(content, <span class="keyword">null</span>, destPath, needCompress);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成二维码  </span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> content</span></span><br><span class="line"><span class="comment">     *            内容  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> destPath</span></span><br><span class="line"><span class="comment">     *            存储地址  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">encode</span><span class="params">(String content, String destPath)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        QRCodeUtils.encode(content, <span class="keyword">null</span>, destPath, <span class="keyword">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成二维码(内嵌LOGO)  </span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> content</span></span><br><span class="line"><span class="comment">     *            内容  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> imgPath</span></span><br><span class="line"><span class="comment">     *            LOGO地址  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> output</span></span><br><span class="line"><span class="comment">     *            输出流  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> needCompress</span></span><br><span class="line"><span class="comment">     *            是否压缩LOGO  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">encode</span><span class="params">(String content, String imgPath,</span></span></span><br><span class="line"><span class="function"><span class="params">                              OutputStream output, <span class="keyword">boolean</span> needCompress)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        BufferedImage image = QRCodeUtils.createImage(content, imgPath,</span><br><span class="line">                needCompress);</span><br><span class="line">        ImageIO.write(image, FORMAT_NAME, output);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成二维码  </span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> content</span></span><br><span class="line"><span class="comment">     *            内容  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> output</span></span><br><span class="line"><span class="comment">     *            输出流  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">encode</span><span class="params">(String content, OutputStream output)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        QRCodeUtils.encode(content, <span class="keyword">null</span>, output, <span class="keyword">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 解析二维码  </span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> file</span></span><br><span class="line"><span class="comment">     *            二维码图片  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">decode</span><span class="params">(File file)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        BufferedImage image;</span><br><span class="line">        image = ImageIO.read(file);</span><br><span class="line">        <span class="keyword">if</span> (image == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        BufferedImageLuminanceSource source = <span class="keyword">new</span> BufferedImageLuminanceSource(</span><br><span class="line">                image);</span><br><span class="line">        BinaryBitmap bitmap = <span class="keyword">new</span> BinaryBitmap(<span class="keyword">new</span> HybridBinarizer(source));</span><br><span class="line">        Result result;</span><br><span class="line">        Hashtable&lt;DecodeHintType, Object&gt; hints = <span class="keyword">new</span> Hashtable&lt;DecodeHintType, Object&gt;();</span><br><span class="line">        hints.put(DecodeHintType.CHARACTER_SET, CHARSET);</span><br><span class="line">        result = <span class="keyword">new</span> MultiFormatReader().decode(bitmap, hints);</span><br><span class="line">        String resultStr = result.getText();</span><br><span class="line">        <span class="keyword">return</span> resultStr;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 解析二维码  </span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> path</span></span><br><span class="line"><span class="comment">     *            二维码图片地址  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">decode</span><span class="params">(String path)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> QRCodeUtils.decode(<span class="keyword">new</span> File(path));</span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Controller层"><a href="#Controller层" class="headerlink" title="Controller层"></a>Controller层</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@AuthIgnore</span></span><br><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"QRCode"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> R <span class="title">QRCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String text = <span class="string">"I love you"</span>;  <span class="comment">//生成二维码的内容</span></span><br><span class="line">        String logoPath = <span class="string">"D:\\img\\1575892281966maxresdefault.jpg"</span>;<span class="comment">//二维码的logo图片</span></span><br><span class="line">        String destPath = <span class="string">"D:\\img"</span>;    <span class="comment">//生成的二维码存储本地的地址</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">System.out.println(QRCodeUtils.encode(text, logoPath, destPath, <span class="keyword">true</span>));</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> R.ok().put(<span class="string">"msg"</span>, <span class="string">"成功"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="使用Postman访问接口"><a href="#使用Postman访问接口" class="headerlink" title="使用Postman访问接口"></a>使用Postman访问接口</h2><p><img src="/posts/1288042365/a.jpg" alt><br><font size="10" color="red">生成成功</font><br><img src="/posts/1288042365/b.jpg" alt><br><img src="/posts/1288042365/c.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 二维码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot添加热部署</title>
      <link href="/posts/2325958257/"/>
      <url>/posts/2325958257/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><center>springBootmaven依赖</center><a id="more"></a><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 热部署 --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt;</span><br><span class="line">    &lt;optional&gt;true&lt;/optional&gt; &lt;!-- 这个需要为 true 热部署才有效 --&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> SpringBoot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> maven依赖 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的第一篇Hexo博客</title>
      <link href="/posts/2439293893/"/>
      <url>/posts/2439293893/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><center><font color="red" size="10">Hexo + Butterfly主题生成</font></center>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
